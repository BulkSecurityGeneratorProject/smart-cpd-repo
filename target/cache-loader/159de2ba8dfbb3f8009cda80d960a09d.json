{"remainingRequest":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/thread-loader/dist/cjs.js??ref--10-2!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/ts-loader/index.js??ref--10-3!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/angular-router-loader/src/index.js!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/tslint-loader/index.js!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/src/main/webapp/app/entities/customer/customer-update.component.ts","dependencies":[{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/src/main/webapp/app/entities/customer/customer-update.component.ts","mtime":1546132670000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/cache-loader/dist/cjs.js","mtime":1546694544000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/thread-loader/dist/cjs.js","mtime":1546694542000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/ts-loader/index.js","mtime":1519365772000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar router_1 = require(\"@angular/router\");\nvar moment = require(\"moment\");\nvar input_constants_1 = require(\"app/shared/constants/input.constants\");\nvar ng_jhipster_1 = require(\"ng-jhipster\");\nvar customer_service_1 = require(\"./customer.service\");\nvar company_1 = require(\"app/entities/company\");\nvar core_2 = require(\"app/core\");\nvar CustomerUpdateComponent = /** @class */ (function () {\n    function CustomerUpdateComponent(jhiAlertService, customerService, companyService, userService, activatedRoute) {\n        this.jhiAlertService = jhiAlertService;\n        this.customerService = customerService;\n        this.companyService = companyService;\n        this.userService = userService;\n        this.activatedRoute = activatedRoute;\n    }\n    CustomerUpdateComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        this.isSaving = false;\n        this.activatedRoute.data.subscribe(function (_a) {\n            var customer = _a.customer;\n            _this.customer = customer;\n        });\n        this.companyService.query().subscribe(function (res) {\n            _this.companies = res.body;\n        }, function (res) { return _this.onError(res.message); });\n        this.userService.query().subscribe(function (res) {\n            _this.users = res.body;\n        }, function (res) { return _this.onError(res.message); });\n    };\n    CustomerUpdateComponent.prototype.previousState = function () {\n        window.history.back();\n    };\n    CustomerUpdateComponent.prototype.save = function () {\n        this.isSaving = true;\n        this.customer.registered = moment(this.registered, input_constants_1.DATE_TIME_FORMAT);\n        this.customer.lastactive = moment(this.lastactive, input_constants_1.DATE_TIME_FORMAT);\n        this.customer.cycledate = moment(this.cycledate, input_constants_1.DATE_TIME_FORMAT);\n        if (this.customer.id !== undefined) {\n            this.subscribeToSaveResponse(this.customerService.update(this.customer));\n        }\n        else {\n            this.subscribeToSaveResponse(this.customerService.create(this.customer));\n        }\n    };\n    CustomerUpdateComponent.prototype.subscribeToSaveResponse = function (result) {\n        var _this = this;\n        result.subscribe(function (res) { return _this.onSaveSuccess(); }, function (res) { return _this.onSaveError(); });\n    };\n    CustomerUpdateComponent.prototype.onSaveSuccess = function () {\n        this.isSaving = false;\n        this.previousState();\n    };\n    CustomerUpdateComponent.prototype.onSaveError = function () {\n        this.isSaving = false;\n    };\n    CustomerUpdateComponent.prototype.onError = function (errorMessage) {\n        this.jhiAlertService.error(errorMessage, null, null);\n    };\n    CustomerUpdateComponent.prototype.trackCompanyById = function (index, item) {\n        return item.id;\n    };\n    CustomerUpdateComponent.prototype.trackUserById = function (index, item) {\n        return item.id;\n    };\n    Object.defineProperty(CustomerUpdateComponent.prototype, \"customer\", {\n        get: function () {\n            return this._customer;\n        },\n        set: function (customer) {\n            this._customer = customer;\n            this.registered = moment(customer.registered).format(input_constants_1.DATE_TIME_FORMAT);\n            this.lastactive = moment(customer.lastactive).format(input_constants_1.DATE_TIME_FORMAT);\n            this.cycledate = moment(customer.cycledate).format(input_constants_1.DATE_TIME_FORMAT);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CustomerUpdateComponent = tslib_1.__decorate([\n        core_1.Component({\n            selector: 'jhi-customer-update',\n            templateUrl: './customer-update.component.html'\n        }),\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof ng_jhipster_1.JhiAlertService !== \"undefined\" && ng_jhipster_1.JhiAlertService) === \"function\" && _a || Object, typeof (_b = typeof customer_service_1.CustomerService !== \"undefined\" && customer_service_1.CustomerService) === \"function\" && _b || Object, typeof (_c = typeof company_1.CompanyService !== \"undefined\" && company_1.CompanyService) === \"function\" && _c || Object, typeof (_d = typeof core_2.UserService !== \"undefined\" && core_2.UserService) === \"function\" && _d || Object, typeof (_e = typeof router_1.ActivatedRoute !== \"undefined\" && router_1.ActivatedRoute) === \"function\" && _e || Object])\n    ], CustomerUpdateComponent);\n    return CustomerUpdateComponent;\n    var _a, _b, _c, _d, _e;\n}());\nexports.CustomerUpdateComponent = CustomerUpdateComponent;\n",{"version":3,"file":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/src/main/webapp/app/entities/customer/customer-update.component.ts","sourceRoot":"","sources":["/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/angular-router-loader/src/index.js!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/tslint-loader/index.js!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/src/main/webapp/app/entities/customer/customer-update.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport * as moment from 'moment';\nimport { DATE_TIME_FORMAT } from 'app/shared/constants/input.constants';\nimport { JhiAlertService } from 'ng-jhipster';\n\nimport { ICustomer } from 'app/shared/model/customer.model';\nimport { CustomerService } from './customer.service';\nimport { ICompany } from 'app/shared/model/company.model';\nimport { CompanyService } from 'app/entities/company';\nimport { IUser, UserService } from 'app/core';\n\n@Component({\n    selector: 'jhi-customer-update',\n    templateUrl: './customer-update.component.html'\n})\nexport class CustomerUpdateComponent implements OnInit {\n    private _customer: ICustomer;\n    isSaving: boolean;\n\n    companies: ICompany[];\n\n    users: IUser[];\n    registered: string;\n    lastactive: string;\n    cycledate: string;\n\n    constructor(\n        private jhiAlertService: JhiAlertService,\n        private customerService: CustomerService,\n        private companyService: CompanyService,\n        private userService: UserService,\n        private activatedRoute: ActivatedRoute\n    ) {}\n\n    ngOnInit() {\n        this.isSaving = false;\n        this.activatedRoute.data.subscribe(({ customer }) => {\n            this.customer = customer;\n        });\n        this.companyService.query().subscribe(\n            (res: HttpResponse<ICompany[]>) => {\n                this.companies = res.body;\n            },\n            (res: HttpErrorResponse) => this.onError(res.message)\n        );\n        this.userService.query().subscribe(\n            (res: HttpResponse<IUser[]>) => {\n                this.users = res.body;\n            },\n            (res: HttpErrorResponse) => this.onError(res.message)\n        );\n    }\n\n    previousState() {\n        window.history.back();\n    }\n\n    save() {\n        this.isSaving = true;\n        this.customer.registered = moment(this.registered, DATE_TIME_FORMAT);\n        this.customer.lastactive = moment(this.lastactive, DATE_TIME_FORMAT);\n        this.customer.cycledate = moment(this.cycledate, DATE_TIME_FORMAT);\n        if (this.customer.id !== undefined) {\n            this.subscribeToSaveResponse(this.customerService.update(this.customer));\n        } else {\n            this.subscribeToSaveResponse(this.customerService.create(this.customer));\n        }\n    }\n\n    private subscribeToSaveResponse(result: Observable<HttpResponse<ICustomer>>) {\n        result.subscribe((res: HttpResponse<ICustomer>) => this.onSaveSuccess(), (res: HttpErrorResponse) => this.onSaveError());\n    }\n\n    private onSaveSuccess() {\n        this.isSaving = false;\n        this.previousState();\n    }\n\n    private onSaveError() {\n        this.isSaving = false;\n    }\n\n    private onError(errorMessage: string) {\n        this.jhiAlertService.error(errorMessage, null, null);\n    }\n\n    trackCompanyById(index: number, item: ICompany) {\n        return item.id;\n    }\n\n    trackUserById(index: number, item: IUser) {\n        return item.id;\n    }\n    get customer() {\n        return this._customer;\n    }\n\n    set customer(customer: ICustomer) {\n        this._customer = customer;\n        this.registered = moment(customer.registered).format(DATE_TIME_FORMAT);\n        this.lastactive = moment(customer.lastactive).format(DATE_TIME_FORMAT);\n        this.cycledate = moment(customer.cycledate).format(DATE_TIME_FORMAT);\n    }\n}\n"]}]}