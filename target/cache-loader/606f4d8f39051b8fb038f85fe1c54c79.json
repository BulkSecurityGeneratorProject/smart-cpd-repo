{"remainingRequest":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/thread-loader/dist/cjs.js??ref--10-2!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/ts-loader/index.js??ref--10-3!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/angular-router-loader/src/index.js!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/tslint-loader/index.js!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/src/main/webapp/app/entities/question-history/question-history.route.ts","dependencies":[{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/src/main/webapp/app/entities/question-history/question-history.route.ts","mtime":1546132670000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/cache-loader/dist/cjs.js","mtime":1546694544000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/thread-loader/dist/cjs.js","mtime":1546694542000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/ts-loader/index.js","mtime":1519365772000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar core_2 = require(\"app/core\");\nvar rxjs_1 = require(\"rxjs\");\nvar operators_1 = require(\"rxjs/operators\");\nvar question_history_model_1 = require(\"app/shared/model/question-history.model\");\nvar question_history_service_1 = require(\"./question-history.service\");\nvar question_history_component_1 = require(\"./question-history.component\");\nvar question_history_detail_component_1 = require(\"./question-history-detail.component\");\nvar question_history_update_component_1 = require(\"./question-history-update.component\");\nvar question_history_delete_dialog_component_1 = require(\"./question-history-delete-dialog.component\");\nvar QuestionHistoryResolve = /** @class */ (function () {\n    function QuestionHistoryResolve(service) {\n        this.service = service;\n    }\n    QuestionHistoryResolve.prototype.resolve = function (route, state) {\n        var id = route.params['id'] ? route.params['id'] : null;\n        if (id) {\n            return this.service.find(id).pipe(operators_1.map(function (questionHistory) { return questionHistory.body; }));\n        }\n        return rxjs_1.of(new question_history_model_1.QuestionHistory());\n    };\n    QuestionHistoryResolve = tslib_1.__decorate([\n        core_1.Injectable({ providedIn: 'root' }),\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof question_history_service_1.QuestionHistoryService !== \"undefined\" && question_history_service_1.QuestionHistoryService) === \"function\" && _a || Object])\n    ], QuestionHistoryResolve);\n    return QuestionHistoryResolve;\n    var _a;\n}());\nexports.QuestionHistoryResolve = QuestionHistoryResolve;\nexports.questionHistoryRoute = [\n    {\n        path: 'question-history',\n        component: question_history_component_1.QuestionHistoryComponent,\n        data: {\n            authorities: ['ROLE_USER'],\n            pageTitle: 'smartCpdApp.questionHistory.home.title'\n        },\n        canActivate: [core_2.UserRouteAccessService]\n    },\n    {\n        path: 'question-history/:id/view',\n        component: question_history_detail_component_1.QuestionHistoryDetailComponent,\n        resolve: {\n            questionHistory: QuestionHistoryResolve\n        },\n        data: {\n            authorities: ['ROLE_USER'],\n            pageTitle: 'smartCpdApp.questionHistory.home.title'\n        },\n        canActivate: [core_2.UserRouteAccessService]\n    },\n    {\n        path: 'question-history/new',\n        component: question_history_update_component_1.QuestionHistoryUpdateComponent,\n        resolve: {\n            questionHistory: QuestionHistoryResolve\n        },\n        data: {\n            authorities: ['ROLE_USER'],\n            pageTitle: 'smartCpdApp.questionHistory.home.title'\n        },\n        canActivate: [core_2.UserRouteAccessService]\n    },\n    {\n        path: 'question-history/:id/edit',\n        component: question_history_update_component_1.QuestionHistoryUpdateComponent,\n        resolve: {\n            questionHistory: QuestionHistoryResolve\n        },\n        data: {\n            authorities: ['ROLE_USER'],\n            pageTitle: 'smartCpdApp.questionHistory.home.title'\n        },\n        canActivate: [core_2.UserRouteAccessService]\n    }\n];\nexports.questionHistoryPopupRoute = [\n    {\n        path: 'question-history/:id/delete',\n        component: question_history_delete_dialog_component_1.QuestionHistoryDeletePopupComponent,\n        resolve: {\n            questionHistory: QuestionHistoryResolve\n        },\n        data: {\n            authorities: ['ROLE_USER'],\n            pageTitle: 'smartCpdApp.questionHistory.home.title'\n        },\n        canActivate: [core_2.UserRouteAccessService],\n        outlet: 'popup'\n    }\n];\n",{"version":3,"file":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/src/main/webapp/app/entities/question-history/question-history.route.ts","sourceRoot":"","sources":["/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/angular-router-loader/src/index.js!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/tslint-loader/index.js!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/src/main/webapp/app/entities/question-history/question-history.route.ts"],"names":[],"mappings":";;;AAAA,sCAA2C;AAG3C,iCAAkD;AAClD,6BAA0B;AAC1B,4CAAqC;AACrC,kFAA0E;AAC1E,uEAAoE;AACpE,2EAAwE;AACxE,yFAAqF;AACrF,yFAAqF;AACrF,uGAAiG;AAIjG;IACI,gCAAoB,OAA+B;QAA/B,YAAO,GAAP,OAAO,CAAwB;IAAG,CAAC;IAEvD,wCAAO,GAAP,UAAQ,KAA6B,EAAE,KAA0B;QAC7D,IAAM,EAAE,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAC1D,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACL,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,eAAG,CAAC,UAAC,eAA8C,IAAK,OAAA,eAAe,CAAC,IAAI,EAApB,CAAoB,CAAC,CAAC,CAAC;QACrH,CAAC;QACD,MAAM,CAAC,SAAE,CAAC,IAAI,wCAAe,EAAE,CAAC,CAAC;IACrC,CAAC;IATQ,sBAAsB;QADlC,iBAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;qEAEF,iDAAsB,oBAAtB,iDAAsB;OAD1C,sBAAsB,CAUlC;IAAD,6BAAC;;CAAA,AAVD,IAUC;AAVY,wDAAsB;AAYtB,QAAA,oBAAoB,GAAW;IACxC;QACI,IAAI,EAAE,kBAAkB;QACxB,SAAS,EAAE,qDAAwB;QACnC,IAAI,EAAE;YACF,WAAW,EAAE,CAAC,WAAW,CAAC;YAC1B,SAAS,EAAE,wCAAwC;SACtD;QACD,WAAW,EAAE,CAAC,6BAAsB,CAAC;KACxC;IACD;QACI,IAAI,EAAE,2BAA2B;QACjC,SAAS,EAAE,kEAA8B;QACzC,OAAO,EAAE;YACL,eAAe,EAAE,sBAAsB;SAC1C;QACD,IAAI,EAAE;YACF,WAAW,EAAE,CAAC,WAAW,CAAC;YAC1B,SAAS,EAAE,wCAAwC;SACtD;QACD,WAAW,EAAE,CAAC,6BAAsB,CAAC;KACxC;IACD;QACI,IAAI,EAAE,sBAAsB;QAC5B,SAAS,EAAE,kEAA8B;QACzC,OAAO,EAAE;YACL,eAAe,EAAE,sBAAsB;SAC1C;QACD,IAAI,EAAE;YACF,WAAW,EAAE,CAAC,WAAW,CAAC;YAC1B,SAAS,EAAE,wCAAwC;SACtD;QACD,WAAW,EAAE,CAAC,6BAAsB,CAAC;KACxC;IACD;QACI,IAAI,EAAE,2BAA2B;QACjC,SAAS,EAAE,kEAA8B;QACzC,OAAO,EAAE;YACL,eAAe,EAAE,sBAAsB;SAC1C;QACD,IAAI,EAAE;YACF,WAAW,EAAE,CAAC,WAAW,CAAC;YAC1B,SAAS,EAAE,wCAAwC;SACtD;QACD,WAAW,EAAE,CAAC,6BAAsB,CAAC;KACxC;CACJ,CAAC;AAEW,QAAA,yBAAyB,GAAW;IAC7C;QACI,IAAI,EAAE,6BAA6B;QACnC,SAAS,EAAE,8EAAmC;QAC9C,OAAO,EAAE;YACL,eAAe,EAAE,sBAAsB;SAC1C;QACD,IAAI,EAAE;YACF,WAAW,EAAE,CAAC,WAAW,CAAC;YAC1B,SAAS,EAAE,wCAAwC;SACtD;QACD,WAAW,EAAE,CAAC,6BAAsB,CAAC;QACrC,MAAM,EAAE,OAAO;KAClB;CACJ,CAAC","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, Routes } from '@angular/router';\nimport { UserRouteAccessService } from 'app/core';\nimport { of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { QuestionHistory } from 'app/shared/model/question-history.model';\nimport { QuestionHistoryService } from './question-history.service';\nimport { QuestionHistoryComponent } from './question-history.component';\nimport { QuestionHistoryDetailComponent } from './question-history-detail.component';\nimport { QuestionHistoryUpdateComponent } from './question-history-update.component';\nimport { QuestionHistoryDeletePopupComponent } from './question-history-delete-dialog.component';\nimport { IQuestionHistory } from 'app/shared/model/question-history.model';\n\n@Injectable({ providedIn: 'root' })\nexport class QuestionHistoryResolve implements Resolve<IQuestionHistory> {\n    constructor(private service: QuestionHistoryService) {}\n\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        const id = route.params['id'] ? route.params['id'] : null;\n        if (id) {\n            return this.service.find(id).pipe(map((questionHistory: HttpResponse<QuestionHistory>) => questionHistory.body));\n        }\n        return of(new QuestionHistory());\n    }\n}\n\nexport const questionHistoryRoute: Routes = [\n    {\n        path: 'question-history',\n        component: QuestionHistoryComponent,\n        data: {\n            authorities: ['ROLE_USER'],\n            pageTitle: 'smartCpdApp.questionHistory.home.title'\n        },\n        canActivate: [UserRouteAccessService]\n    },\n    {\n        path: 'question-history/:id/view',\n        component: QuestionHistoryDetailComponent,\n        resolve: {\n            questionHistory: QuestionHistoryResolve\n        },\n        data: {\n            authorities: ['ROLE_USER'],\n            pageTitle: 'smartCpdApp.questionHistory.home.title'\n        },\n        canActivate: [UserRouteAccessService]\n    },\n    {\n        path: 'question-history/new',\n        component: QuestionHistoryUpdateComponent,\n        resolve: {\n            questionHistory: QuestionHistoryResolve\n        },\n        data: {\n            authorities: ['ROLE_USER'],\n            pageTitle: 'smartCpdApp.questionHistory.home.title'\n        },\n        canActivate: [UserRouteAccessService]\n    },\n    {\n        path: 'question-history/:id/edit',\n        component: QuestionHistoryUpdateComponent,\n        resolve: {\n            questionHistory: QuestionHistoryResolve\n        },\n        data: {\n            authorities: ['ROLE_USER'],\n            pageTitle: 'smartCpdApp.questionHistory.home.title'\n        },\n        canActivate: [UserRouteAccessService]\n    }\n];\n\nexport const questionHistoryPopupRoute: Routes = [\n    {\n        path: 'question-history/:id/delete',\n        component: QuestionHistoryDeletePopupComponent,\n        resolve: {\n            questionHistory: QuestionHistoryResolve\n        },\n        data: {\n            authorities: ['ROLE_USER'],\n            pageTitle: 'smartCpdApp.questionHistory.home.title'\n        },\n        canActivate: [UserRouteAccessService],\n        outlet: 'popup'\n    }\n];\n"]}]}