{"remainingRequest":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/thread-loader/dist/cjs.js??ref--10-2!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/ts-loader/index.js??ref--10-3!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/angular-router-loader/src/index.js!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/tslint-loader/index.js!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/src/main/webapp/app/entities/quiz-app/quiz-app-detail.component.ts","dependencies":[{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/src/main/webapp/app/entities/quiz-app/quiz-app-detail.component.ts","mtime":1546645998000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/cache-loader/dist/cjs.js","mtime":1546694544000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/thread-loader/dist/cjs.js","mtime":1546694542000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/ts-loader/index.js","mtime":1519365772000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar router_1 = require(\"@angular/router\");\nvar customer_1 = require(\"app/entities/customer\");\nvar time_course_log_1 = require(\"app/entities/time-course-log\");\nvar core_2 = require(\"app/core\");\nvar section_history_1 = require(\"app/entities/section-history\");\nvar quiz_history_1 = require(\"app/entities/quiz-history\");\nvar moment = require(\"moment\");\nvar certificate_1 = require(\"app/entities/certificate\");\nvar question_history_1 = require(\"app/entities/question-history\");\nvar QuizAppDetailComponent = /** @class */ (function () {\n    function QuizAppDetailComponent(activatedRoute, router, userService, customerService, timeCourseLogService, principal, sectionHistoryService, quizHistoryService, certificateService, questionHistoryService) {\n        this.activatedRoute = activatedRoute;\n        this.router = router;\n        this.userService = userService;\n        this.customerService = customerService;\n        this.timeCourseLogService = timeCourseLogService;\n        this.principal = principal;\n        this.sectionHistoryService = sectionHistoryService;\n        this.quizHistoryService = quizHistoryService;\n        this.certificateService = certificateService;\n        this.questionHistoryService = questionHistoryService;\n        this.ellapsed = 0;\n        this.prevEllapsed = 0;\n        this.pause = false;\n        this.currentQuestion = 1;\n        this.logs = {};\n        this.tempQuizHist = {};\n        this.quesHistory = {};\n    }\n    QuizAppDetailComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        this.activatedRoute.data.subscribe(function (_a) {\n            var quizApp = _a.quizApp;\n            _this.quizApp = quizApp;\n        });\n        this.principal.identity().then(function (account) {\n            _this.currentAccount = account;\n            _this.custEmail = _this.currentAccount.email;\n        });\n        this.quiz = this.quizApp.quiz;\n        this.questionList = this.quizApp.questions;\n        this.currentQuestion = 1;\n        this.isselected = false;\n        this.proceed = false;\n        this.clearOptions();\n        this.startDate = new Date();\n        setInterval(function () {\n            _this.ticksDate();\n            _this.value = (_this.currentQuestion - 1) / _this.questionList.length * 100;\n        }, 1000);\n        this.tempQuizHist.start = moment();\n    };\n    QuizAppDetailComponent.prototype.onSelect = function (question, option) {\n        var _this = this;\n        question.choices.forEach(function (x) {\n            if (x.id === option.id) {\n                _this.isselected = true;\n            }\n        });\n        if (this.isselected) {\n            if (option.isanswer) {\n                this.proceed = true;\n                this.message = 'Q:' + this.currentQuestion + ' has been answered correctly, moving to the next question';\n                if (this.currentQuestion >= this.questionList.length) {\n                    this.value = this.currentQuestion / this.questionList.length * 100;\n                    this.userService.getemail(this.custEmail).subscribe(function (userId) {\n                        _this.customerService.getuser(userId).subscribe(function (customer) {\n                            _this.customer = customer;\n                            _this.reqdCourse = _this.quizApp.currSection.course;\n                            _this.timeCourseLogService.getdistinct(_this.reqdCourse.id, customer.id).subscribe(function (logData) {\n                                _this.logs = logData.body;\n                                if (_this.logs !== null) {\n                                    _this.logs.timespent += _this.ellapsed;\n                                    _this.timeCourseLogService.update(_this.logs).subscribe(function (updated) {\n                                        _this.logs = updated.body;\n                                    });\n                                }\n                                else {\n                                    _this.logs.course = _this.reqdCourse;\n                                    _this.logs.customer = _this.customer;\n                                    _this.logs.recorddate = moment(new Date());\n                                    _this.logs.timespent = _this.ellapsed;\n                                    _this.timeCourseLogService.create(_this.logs).subscribe(function (updated) {\n                                        _this.logs = updated.body;\n                                    });\n                                }\n                            });\n                            _this.tempQuizHist.customer = _this.customer;\n                            _this.tempQuizHist.quiz = _this.quiz;\n                            _this.tempQuizHist.passed = true;\n                            _this.quizHistoryService.create(_this.tempQuizHist).subscribe(function (quizHist) {\n                                console.log(quizHist.body);\n                            });\n                        });\n                    });\n                    this.message =\n                        'You have successfully completed the' +\n                            this.quizApp.quiz.name +\n                            'quiz, and shortly you will be redirected to Course:' +\n                            this.quizApp.currSection.course.normCourses +\n                            ', Module: ' +\n                            this.quizApp.newSection.normSection;\n                    if (this.quizApp.newSection !== null) {\n                        setTimeout(function () {\n                            this.router.navigateByUrl('section/' + this.quizApp.newSection.id.toString() + '/view');\n                        }.bind(this), 6000);\n                    }\n                    else {\n                        this.userService.getemail(this.custEmail).subscribe(function (userId) {\n                            _this.customerService.getuser(userId).subscribe(function (customer) {\n                                _this.customer = customer;\n                                _this.certificate.courses = _this.reqdCourse;\n                                _this.certificate.timestamp = moment(new Date());\n                                _this.certificate.customer = _this.customer;\n                                _this.certificateService.create(_this.certificate).subscribe(function () {\n                                    setTimeout(function () {\n                                        this.message = 'You have successfuly completed all the modules and quizes for this course, a certificate ' +\n                                            'will be shortly generated [accessible on dashboard] and sent via email';\n                                        this.router.navigateByUrl('certificate/' + this.certificate.id.toString() + '/view');\n                                    }.bind(_this), 6000);\n                                });\n                            });\n                        });\n                    }\n                }\n                else {\n                    setTimeout(function () {\n                        this.currentQuestion++;\n                        this.value = (this.currentQuestion - 1) / this.questionList.length * 100;\n                        this.proceed = false;\n                        this.isselected = false;\n                        this.clearOptions();\n                    }.bind(this), 2000);\n                }\n                /**this.isselected = false;*/\n                this.quesHistory.correct = true;\n                this.quesHistory.customer = this.customer;\n                this.quesHistory.question = question;\n                this.quesHistory.timestamp = moment(new Date());\n                this.questionHistoryService.create(this.quesHistory).subscribe(function (quesHist) {\n                    console.log(quesHist);\n                    _this.quesHistory = {};\n                });\n            }\n            else {\n                this.proceed = false;\n                this.message =\n                    'You have selected the wrong option for this question, kindly review the following the restudy material to attempt again and proceed further';\n                this.restudy = question.restudy;\n                setTimeout(function () {\n                    this.value = (this.currentQuestion - 1) / this.questionList.length * 100;\n                    this.isselected = false;\n                    this.clearOptions();\n                }.bind(this), 6000);\n                this.quesHistory.correct = false;\n                this.quesHistory.customer = this.customer;\n                this.quesHistory.question = question;\n                this.quesHistory.timestamp = moment(new Date());\n                this.questionHistoryService.create(this.quesHistory).subscribe(function (quesHist) {\n                    console.log(quesHist);\n                    _this.quesHistory = {};\n                });\n            }\n        }\n        else {\n            this.message = 'You have not selected any options for this question';\n            this.proceed = false;\n        }\n    };\n    QuizAppDetailComponent.prototype.clearOptions = function () {\n        this.checkboxes.forEach(function (element) {\n            element.nativeElement.checked = false;\n        });\n    };\n    QuizAppDetailComponent.prototype.previousState = function () {\n        window.history.back();\n    };\n    QuizAppDetailComponent.prototype.ticksDate = function () {\n        if (this.pause === false) {\n            this.nowDate = new Date();\n            this.ellapsed = (this.nowDate.getTime() - this.startDate.getTime()) / 1000;\n            this.ellapsedTime = this.parseTime(this.ellapsed);\n        }\n    };\n    QuizAppDetailComponent.prototype.parseTime = function (totalSeconds) {\n        var hrs = Math.floor(totalSeconds / 3600);\n        if (Number(hrs) < 1) {\n            var mins = Math.floor(totalSeconds / 60);\n            var secs = Math.round(totalSeconds % 60);\n            mins = (mins < 10 ? '0' : '') + mins;\n            secs = (secs < 10 ? '0' : '') + secs;\n            hrs = (hrs < 10 ? '0' : '') + hrs;\n            return mins + ':' + secs;\n        }\n        else {\n            var mins = Math.floor((totalSeconds % 3600) / 60);\n            var secs = Math.round(totalSeconds % 60);\n            mins = (mins < 10 ? '0' : '') + mins;\n            secs = (secs < 10 ? '0' : '') + secs;\n            hrs = (hrs < 10 ? '0' : '') + hrs;\n            return hrs + ':' + mins + ':' + secs;\n        }\n    };\n    tslib_1.__decorate([\n        core_1.ViewChildren('radioBtn'),\n        tslib_1.__metadata(\"design:type\", typeof (_a = typeof core_1.QueryList !== \"undefined\" && core_1.QueryList) === \"function\" && _a || Object)\n    ], QuizAppDetailComponent.prototype, \"checkboxes\", void 0);\n    QuizAppDetailComponent = tslib_1.__decorate([\n        core_1.Component({\n            selector: 'jhi-quiz-app-detail',\n            templateUrl: './quiz-app-detail.component.html'\n        }),\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_b = typeof router_1.ActivatedRoute !== \"undefined\" && router_1.ActivatedRoute) === \"function\" && _b || Object, typeof (_c = typeof router_1.Router !== \"undefined\" && router_1.Router) === \"function\" && _c || Object, typeof (_d = typeof core_2.UserService !== \"undefined\" && core_2.UserService) === \"function\" && _d || Object, typeof (_e = typeof customer_1.CustomerService !== \"undefined\" && customer_1.CustomerService) === \"function\" && _e || Object, typeof (_f = typeof time_course_log_1.TimeCourseLogService !== \"undefined\" && time_course_log_1.TimeCourseLogService) === \"function\" && _f || Object, typeof (_g = typeof core_2.Principal !== \"undefined\" && core_2.Principal) === \"function\" && _g || Object, typeof (_h = typeof section_history_1.SectionHistoryService !== \"undefined\" && section_history_1.SectionHistoryService) === \"function\" && _h || Object, typeof (_j = typeof quiz_history_1.QuizHistoryService !== \"undefined\" && quiz_history_1.QuizHistoryService) === \"function\" && _j || Object, typeof (_k = typeof certificate_1.CertificateService !== \"undefined\" && certificate_1.CertificateService) === \"function\" && _k || Object, typeof (_l = typeof question_history_1.QuestionHistoryService !== \"undefined\" && question_history_1.QuestionHistoryService) === \"function\" && _l || Object])\n    ], QuizAppDetailComponent);\n    return QuizAppDetailComponent;\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;\n}());\nexports.QuizAppDetailComponent = QuizAppDetailComponent;\n",{"version":3,"file":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/src/main/webapp/app/entities/quiz-app/quiz-app-detail.component.ts","sourceRoot":"","sources":["/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/angular-router-loader/src/index.js!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/tslint-loader/index.js!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/src/main/webapp/app/entities/quiz-app/quiz-app-detail.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, ElementRef, OnInit, QueryList, ViewChildren } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { IQuizApp } from 'app/shared/model/quiz-app.model';\nimport { IQuiz } from 'app/shared/model/quiz.model';\nimport { IQuestion } from 'app/shared/model/question.model';\nimport { IChoice } from 'app/shared/model/choice.model';\nimport { CustomerService } from 'app/entities/customer';\nimport { IBookmark } from 'app/shared/model/bookmark.model';\nimport { ICourse } from 'app/shared/model/course.model';\nimport { ITimeCourseLog } from 'app/shared/model/time-course-log.model';\nimport { TimeCourseLogService } from 'app/entities/time-course-log';\nimport { Account, Principal, UserService } from 'app/core';\nimport { SectionHistoryService } from 'app/entities/section-history';\nimport { ISectionHistory } from 'app/shared/model/section-history.model';\nimport { QuizHistoryService } from 'app/entities/quiz-history';\nimport { IQuizHistory } from 'app/shared/model/quiz-history.model';\nimport moment = require('moment');\nimport { CertificateService } from 'app/entities/certificate';\nimport { ICertificate } from 'app/shared/model/certificate.model';\nimport { ICustomer } from 'app/shared/model/customer.model';\nimport {IQuestionHistory, QuestionHistory} from 'app/shared/model/question-history.model';\nimport {QuestionHistoryService} from 'app/entities/question-history';\n\n@Component({\n    selector: 'jhi-quiz-app-detail',\n    templateUrl: './quiz-app-detail.component.html'\n})\nexport class QuizAppDetailComponent implements OnInit {\n    quizApp: IQuizApp;\n    quiz: IQuiz;\n    questionList: IQuestion[];\n    currentQuestion: number;\n    proceed: Boolean;\n    isselected: Boolean;\n    message: string;\n    restudy: string;\n    value: number;\n    ellapsed = 0;\n    ellapsedTime: string;\n    prevEllapsed = 0;\n    pause = false;\n    startDate: Date;\n    nowDate: Date;\n    account: Account;\n    custEmail: string;\n    reqdCourse: ICourse;\n    logs: ITimeCourseLog;\n    tempQuizHist: IQuizHistory;\n    currentAccount: any;\n    customer: ICustomer;\n    certificate: ICertificate;\n    quesHistory: IQuestionHistory;\n    @ViewChildren('radioBtn') checkboxes: QueryList<ElementRef>;\n    constructor(\n        private activatedRoute: ActivatedRoute,\n        private router: Router,\n        private userService: UserService,\n        private customerService: CustomerService,\n        private timeCourseLogService: TimeCourseLogService,\n        private principal: Principal,\n        private sectionHistoryService: SectionHistoryService,\n        private quizHistoryService: QuizHistoryService,\n        private certificateService: CertificateService,\n        private questionHistoryService: QuestionHistoryService\n    ) {\n        this.currentQuestion = 1;\n        this.logs = {};\n        this.tempQuizHist = {};\n        this.quesHistory = {};\n    }\n\n    ngOnInit() {\n        this.activatedRoute.data.subscribe(({ quizApp }) => {\n            this.quizApp = quizApp;\n        });\n        this.principal.identity().then(account => {\n            this.currentAccount = account;\n            this.custEmail = this.currentAccount.email;\n        });\n        this.quiz = this.quizApp.quiz;\n        this.questionList = this.quizApp.questions;\n        this.currentQuestion = 1;\n        this.isselected = false;\n        this.proceed = false;\n        this.clearOptions();\n        this.startDate = new Date();\n        setInterval(() => {\n            this.ticksDate();\n            this.value = (this.currentQuestion - 1) / this.questionList.length * 100;\n        }, 1000);\n        this.tempQuizHist.start = moment();\n    }\n\n    onSelect(question: IQuestion, option: IChoice) {\n        question.choices.forEach(x => {\n            if (x.id === option.id) {\n                this.isselected = true;\n            }\n        });\n        if (this.isselected) {\n            if (option.isanswer) {\n                this.proceed = true;\n                this.message = 'Q:' + this.currentQuestion + ' has been answered correctly, moving to the next question';\n                if (this.currentQuestion >= this.questionList.length) {\n                    this.value = this.currentQuestion / this.questionList.length * 100;\n                    this.userService.getemail(this.custEmail).subscribe(userId => {\n                        this.customerService.getuser(userId).subscribe(customer => {\n                            this.customer = customer;\n                            this.reqdCourse = this.quizApp.currSection.course;\n                            this.timeCourseLogService.getdistinct(this.reqdCourse.id, customer.id).subscribe(logData => {\n                                this.logs = logData.body;\n                                if (this.logs !== null) {\n                                    this.logs.timespent += this.ellapsed;\n                                    this.timeCourseLogService.update(this.logs).subscribe(updated => {\n                                        this.logs = updated.body;\n                                    });\n                                } else {\n                                    this.logs.course = this.reqdCourse;\n                                    this.logs.customer = this.customer;\n                                    this.logs.recorddate = moment(new Date());\n                                    this.logs.timespent = this.ellapsed;\n                                    this.timeCourseLogService.create(this.logs).subscribe(updated => {\n                                        this.logs = updated.body;\n                                    });\n                                }\n                            });\n                            this.tempQuizHist.customer = this.customer;\n                            this.tempQuizHist.quiz = this.quiz;\n                            this.tempQuizHist.passed = true;\n                            this.quizHistoryService.create(this.tempQuizHist).subscribe(quizHist => {\n                                console.log(quizHist.body);\n                            });\n                        });\n                    });\n                    this.message =\n                        'You have successfully completed the' +\n                        this.quizApp.quiz.name +\n                        'quiz, and shortly you will be redirected to Course:' +\n                        this.quizApp.currSection.course.normCourses +\n                        ', Module: ' +\n                        this.quizApp.newSection.normSection;\n                    if (this.quizApp.newSection !== null) {\n                            setTimeout(\n                                function() {\n                                    this.router.navigateByUrl('section/' + this.quizApp.newSection.id.toString() + '/view');\n                                }.bind(this), 6000);\n                    } else {\n                        this.userService.getemail(this.custEmail).subscribe(userId => {\n                            this.customerService.getuser(userId).subscribe(customer => {\n                                this.customer = customer;\n                                this.certificate.courses = this.reqdCourse;\n                                this.certificate.timestamp = moment(new Date());\n                                this.certificate.customer = this.customer;\n                                this.certificateService.create(this.certificate).subscribe(() => {\n                                    setTimeout(\n                                        function() {\n                                            this.message = 'You have successfuly completed all the modules and quizes for this course, a certificate ' +\n                                                'will be shortly generated [accessible on dashboard] and sent via email';\n                                            this.router.navigateByUrl('certificate/' + this.certificate.id.toString() + '/view');\n                                        }.bind(this),\n                                        6000\n                                    );\n                                });\n                            });\n                        });\n                    }\n                } else {\n                    setTimeout(\n                        function() {\n                            this.currentQuestion++;\n                            this.value = (this.currentQuestion - 1) / this.questionList.length * 100;\n                            this.proceed = false;\n                            this.isselected = false;\n                            this.clearOptions();\n                        }.bind(this),\n                        2000\n                    );\n                }\n                /**this.isselected = false;*/\n                this.quesHistory.correct = true;\n                this.quesHistory.customer = this.customer;\n                this.quesHistory.question = question;\n                this.quesHistory.timestamp = moment(new Date());\n                this.questionHistoryService.create(this.quesHistory).subscribe(quesHist => {\n                    console.log(quesHist);\n                    this.quesHistory = {};\n                });\n            } else {\n                this.proceed = false;\n                this.message =\n                    'You have selected the wrong option for this question, kindly review the following the restudy material to attempt again and proceed further';\n                this.restudy = question.restudy;\n                setTimeout(\n                    function() {\n                        this.value = (this.currentQuestion - 1) / this.questionList.length * 100;\n                        this.isselected = false;\n                        this.clearOptions();\n                    }.bind(this),\n                    6000\n                );\n                this.quesHistory.correct = false;\n                this.quesHistory.customer = this.customer;\n                this.quesHistory.question = question;\n                this.quesHistory.timestamp = moment(new Date());\n                this.questionHistoryService.create(this.quesHistory).subscribe(quesHist => {\n                    console.log(quesHist);\n                    this.quesHistory = {};\n                });\n            }\n        } else {\n            this.message = 'You have not selected any options for this question';\n            this.proceed = false;\n        }\n    }\n\n    clearOptions() {\n        this.checkboxes.forEach(element => {\n            element.nativeElement.checked = false;\n        });\n    }\n\n    previousState() {\n        window.history.back();\n    }\n\n    ticksDate() {\n        if (this.pause === false) {\n            this.nowDate = new Date();\n            this.ellapsed = (this.nowDate.getTime() - this.startDate.getTime()) / 1000;\n            this.ellapsedTime = this.parseTime(this.ellapsed);\n        }\n    }\n\n    parseTime(totalSeconds: number) {\n        let hrs: string | number = Math.floor(totalSeconds / 3600);\n        if (Number(hrs) < 1) {\n            let mins: string | number = Math.floor(totalSeconds / 60);\n            let secs: string | number = Math.round(totalSeconds % 60);\n            mins = (mins < 10 ? '0' : '') + mins;\n            secs = (secs < 10 ? '0' : '') + secs;\n            hrs = (hrs < 10 ? '0' : '') + hrs;\n            return mins + ':' + secs;\n        } else {\n            let mins: string | number = Math.floor((totalSeconds % 3600) / 60);\n            let secs: string | number = Math.round(totalSeconds % 60);\n            mins = (mins < 10 ? '0' : '') + mins;\n            secs = (secs < 10 ? '0' : '') + secs;\n            hrs = (hrs < 10 ? '0' : '') + hrs;\n            return hrs + ':' + mins + ':' + secs;\n        }\n    }\n}\n"]}]}