{"remainingRequest":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/thread-loader/dist/cjs.js??ref--10-2!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/ts-loader/index.js??ref--10-3!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/angular-router-loader/src/index.js!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/tslint-loader/index.js!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/src/main/webapp/app/entities/company-request/company-request.route.ts","dependencies":[{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/src/main/webapp/app/entities/company-request/company-request.route.ts","mtime":1546132670000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/cache-loader/dist/cjs.js","mtime":1546694544000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/thread-loader/dist/cjs.js","mtime":1546694542000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/ts-loader/index.js","mtime":1519365772000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar core_2 = require(\"app/core\");\nvar rxjs_1 = require(\"rxjs\");\nvar operators_1 = require(\"rxjs/operators\");\nvar company_request_model_1 = require(\"app/shared/model/company-request.model\");\nvar company_request_service_1 = require(\"./company-request.service\");\nvar company_request_component_1 = require(\"./company-request.component\");\nvar company_request_detail_component_1 = require(\"./company-request-detail.component\");\nvar company_request_update_component_1 = require(\"./company-request-update.component\");\nvar company_request_delete_dialog_component_1 = require(\"./company-request-delete-dialog.component\");\nvar CompanyRequestResolve = /** @class */ (function () {\n    function CompanyRequestResolve(service) {\n        this.service = service;\n    }\n    CompanyRequestResolve.prototype.resolve = function (route, state) {\n        var id = route.params['id'] ? route.params['id'] : null;\n        if (id) {\n            return this.service.find(id).pipe(operators_1.map(function (companyRequest) { return companyRequest.body; }));\n        }\n        return rxjs_1.of(new company_request_model_1.CompanyRequest());\n    };\n    CompanyRequestResolve = tslib_1.__decorate([\n        core_1.Injectable({ providedIn: 'root' }),\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof company_request_service_1.CompanyRequestService !== \"undefined\" && company_request_service_1.CompanyRequestService) === \"function\" && _a || Object])\n    ], CompanyRequestResolve);\n    return CompanyRequestResolve;\n    var _a;\n}());\nexports.CompanyRequestResolve = CompanyRequestResolve;\nexports.companyRequestRoute = [\n    {\n        path: 'company-request',\n        component: company_request_component_1.CompanyRequestComponent,\n        data: {\n            authorities: ['ROLE_ADMIN'],\n            pageTitle: 'smartCpdApp.companyRequest.home.title'\n        },\n        canActivate: [core_2.UserRouteAccessService]\n    },\n    {\n        path: 'company-request/:id/view',\n        component: company_request_detail_component_1.CompanyRequestDetailComponent,\n        resolve: {\n            companyRequest: CompanyRequestResolve\n        },\n        data: {\n            authorities: ['ROLE_ADMIN'],\n            pageTitle: 'smartCpdApp.companyRequest.home.title'\n        },\n        canActivate: [core_2.UserRouteAccessService]\n    },\n    {\n        path: 'company-request/new',\n        component: company_request_update_component_1.CompanyRequestUpdateComponent,\n        resolve: {\n            companyRequest: CompanyRequestResolve\n        },\n        data: {\n            authorities: [],\n            pageTitle: 'smartCpdApp.companyRequest.home.title'\n        },\n        canActivate: [core_2.UserRouteAccessService]\n    },\n    {\n        path: 'company-request/:id/edit',\n        component: company_request_update_component_1.CompanyRequestUpdateComponent,\n        resolve: {\n            companyRequest: CompanyRequestResolve\n        },\n        data: {\n            authorities: ['ROLE_ADMIN'],\n            pageTitle: 'smartCpdApp.companyRequest.home.title'\n        },\n        canActivate: [core_2.UserRouteAccessService]\n    }\n];\nexports.companyRequestPopupRoute = [\n    {\n        path: 'company-request/:id/delete',\n        component: company_request_delete_dialog_component_1.CompanyRequestDeletePopupComponent,\n        resolve: {\n            companyRequest: CompanyRequestResolve\n        },\n        data: {\n            authorities: ['ROLE_ADMIN'],\n            pageTitle: 'smartCpdApp.companyRequest.home.title'\n        },\n        canActivate: [core_2.UserRouteAccessService],\n        outlet: 'popup'\n    }\n];\n",{"version":3,"file":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/src/main/webapp/app/entities/company-request/company-request.route.ts","sourceRoot":"","sources":["/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/angular-router-loader/src/index.js!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/tslint-loader/index.js!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/src/main/webapp/app/entities/company-request/company-request.route.ts"],"names":[],"mappings":";;;AAAA,sCAA2C;AAG3C,iCAAkD;AAClD,6BAA0B;AAC1B,4CAAqC;AACrC,gFAAwE;AACxE,qEAAkE;AAClE,yEAAsE;AACtE,uFAAmF;AACnF,uFAAmF;AACnF,qGAA+F;AAI/F;IACI,+BAAoB,OAA8B;QAA9B,YAAO,GAAP,OAAO,CAAuB;IAAG,CAAC;IAEtD,uCAAO,GAAP,UAAQ,KAA6B,EAAE,KAA0B;QAC7D,IAAM,EAAE,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAC1D,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACL,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,eAAG,CAAC,UAAC,cAA4C,IAAK,OAAA,cAAc,CAAC,IAAI,EAAnB,CAAmB,CAAC,CAAC,CAAC;QAClH,CAAC;QACD,MAAM,CAAC,SAAE,CAAC,IAAI,sCAAc,EAAE,CAAC,CAAC;IACpC,CAAC;IATQ,qBAAqB;QADjC,iBAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;qEAEF,+CAAqB,oBAArB,+CAAqB;OADzC,qBAAqB,CAUjC;IAAD,4BAAC;;CAAA,AAVD,IAUC;AAVY,sDAAqB;AAYrB,QAAA,mBAAmB,GAAW;IACvC;QACI,IAAI,EAAE,iBAAiB;QACvB,SAAS,EAAE,mDAAuB;QAClC,IAAI,EAAE;YACF,WAAW,EAAE,CAAC,YAAY,CAAC;YAC3B,SAAS,EAAE,uCAAuC;SACrD;QACD,WAAW,EAAE,CAAC,6BAAsB,CAAC;KACxC;IACD;QACI,IAAI,EAAE,0BAA0B;QAChC,SAAS,EAAE,gEAA6B;QACxC,OAAO,EAAE;YACL,cAAc,EAAE,qBAAqB;SACxC;QACD,IAAI,EAAE;YACF,WAAW,EAAE,CAAC,YAAY,CAAC;YAC3B,SAAS,EAAE,uCAAuC;SACrD;QACD,WAAW,EAAE,CAAC,6BAAsB,CAAC;KACxC;IACD;QACI,IAAI,EAAE,qBAAqB;QAC3B,SAAS,EAAE,gEAA6B;QACxC,OAAO,EAAE;YACL,cAAc,EAAE,qBAAqB;SACxC;QACD,IAAI,EAAE;YACF,WAAW,EAAE,EAAE;YACf,SAAS,EAAE,uCAAuC;SACrD;QACD,WAAW,EAAE,CAAC,6BAAsB,CAAC;KACxC;IACD;QACI,IAAI,EAAE,0BAA0B;QAChC,SAAS,EAAE,gEAA6B;QACxC,OAAO,EAAE;YACL,cAAc,EAAE,qBAAqB;SACxC;QACD,IAAI,EAAE;YACF,WAAW,EAAE,CAAC,YAAY,CAAC;YAC3B,SAAS,EAAE,uCAAuC;SACrD;QACD,WAAW,EAAE,CAAC,6BAAsB,CAAC;KACxC;CACJ,CAAC;AAEW,QAAA,wBAAwB,GAAW;IAC5C;QACI,IAAI,EAAE,4BAA4B;QAClC,SAAS,EAAE,4EAAkC;QAC7C,OAAO,EAAE;YACL,cAAc,EAAE,qBAAqB;SACxC;QACD,IAAI,EAAE;YACF,WAAW,EAAE,CAAC,YAAY,CAAC;YAC3B,SAAS,EAAE,uCAAuC;SACrD;QACD,WAAW,EAAE,CAAC,6BAAsB,CAAC;QACrC,MAAM,EAAE,OAAO;KAClB;CACJ,CAAC","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, Routes } from '@angular/router';\nimport { UserRouteAccessService } from 'app/core';\nimport { of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CompanyRequest } from 'app/shared/model/company-request.model';\nimport { CompanyRequestService } from './company-request.service';\nimport { CompanyRequestComponent } from './company-request.component';\nimport { CompanyRequestDetailComponent } from './company-request-detail.component';\nimport { CompanyRequestUpdateComponent } from './company-request-update.component';\nimport { CompanyRequestDeletePopupComponent } from './company-request-delete-dialog.component';\nimport { ICompanyRequest } from 'app/shared/model/company-request.model';\n\n@Injectable({ providedIn: 'root' })\nexport class CompanyRequestResolve implements Resolve<ICompanyRequest> {\n    constructor(private service: CompanyRequestService) {}\n\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        const id = route.params['id'] ? route.params['id'] : null;\n        if (id) {\n            return this.service.find(id).pipe(map((companyRequest: HttpResponse<CompanyRequest>) => companyRequest.body));\n        }\n        return of(new CompanyRequest());\n    }\n}\n\nexport const companyRequestRoute: Routes = [\n    {\n        path: 'company-request',\n        component: CompanyRequestComponent,\n        data: {\n            authorities: ['ROLE_ADMIN'],\n            pageTitle: 'smartCpdApp.companyRequest.home.title'\n        },\n        canActivate: [UserRouteAccessService]\n    },\n    {\n        path: 'company-request/:id/view',\n        component: CompanyRequestDetailComponent,\n        resolve: {\n            companyRequest: CompanyRequestResolve\n        },\n        data: {\n            authorities: ['ROLE_ADMIN'],\n            pageTitle: 'smartCpdApp.companyRequest.home.title'\n        },\n        canActivate: [UserRouteAccessService]\n    },\n    {\n        path: 'company-request/new',\n        component: CompanyRequestUpdateComponent,\n        resolve: {\n            companyRequest: CompanyRequestResolve\n        },\n        data: {\n            authorities: [],\n            pageTitle: 'smartCpdApp.companyRequest.home.title'\n        },\n        canActivate: [UserRouteAccessService]\n    },\n    {\n        path: 'company-request/:id/edit',\n        component: CompanyRequestUpdateComponent,\n        resolve: {\n            companyRequest: CompanyRequestResolve\n        },\n        data: {\n            authorities: ['ROLE_ADMIN'],\n            pageTitle: 'smartCpdApp.companyRequest.home.title'\n        },\n        canActivate: [UserRouteAccessService]\n    }\n];\n\nexport const companyRequestPopupRoute: Routes = [\n    {\n        path: 'company-request/:id/delete',\n        component: CompanyRequestDeletePopupComponent,\n        resolve: {\n            companyRequest: CompanyRequestResolve\n        },\n        data: {\n            authorities: ['ROLE_ADMIN'],\n            pageTitle: 'smartCpdApp.companyRequest.home.title'\n        },\n        canActivate: [UserRouteAccessService],\n        outlet: 'popup'\n    }\n];\n"]}]}