{"remainingRequest":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/thread-loader/dist/cjs.js??ref--10-2!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/ts-loader/index.js??ref--10-3!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/angular-router-loader/src/index.js!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/tslint-loader/index.js!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/src/main/webapp/app/entities/servicelist/servicelist-update.component.ts","dependencies":[{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/src/main/webapp/app/entities/servicelist/servicelist-update.component.ts","mtime":1546132670000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/cache-loader/dist/cjs.js","mtime":1546694544000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/thread-loader/dist/cjs.js","mtime":1546694542000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/ts-loader/index.js","mtime":1519365772000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar router_1 = require(\"@angular/router\");\nvar ng_jhipster_1 = require(\"ng-jhipster\");\nvar servicelist_service_1 = require(\"./servicelist.service\");\nvar customer_1 = require(\"app/entities/customer\");\nvar ServicelistUpdateComponent = /** @class */ (function () {\n    function ServicelistUpdateComponent(jhiAlertService, servicelistService, customerService, activatedRoute) {\n        this.jhiAlertService = jhiAlertService;\n        this.servicelistService = servicelistService;\n        this.customerService = customerService;\n        this.activatedRoute = activatedRoute;\n    }\n    ServicelistUpdateComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        this.isSaving = false;\n        this.activatedRoute.data.subscribe(function (_a) {\n            var servicelist = _a.servicelist;\n            _this.servicelist = servicelist;\n        });\n        this.customerService.query({ filter: 'servicelist-is-null' }).subscribe(function (res) {\n            if (!_this.servicelist.customer || !_this.servicelist.customer.id) {\n                _this.customers = res.body;\n            }\n            else {\n                _this.customerService.find(_this.servicelist.customer.id).subscribe(function (subRes) {\n                    _this.customers = [subRes.body].concat(res.body);\n                }, function (subRes) { return _this.onError(subRes.message); });\n            }\n        }, function (res) { return _this.onError(res.message); });\n    };\n    ServicelistUpdateComponent.prototype.previousState = function () {\n        window.history.back();\n    };\n    ServicelistUpdateComponent.prototype.save = function () {\n        this.isSaving = true;\n        if (this.servicelist.id !== undefined) {\n            this.subscribeToSaveResponse(this.servicelistService.update(this.servicelist));\n        }\n        else {\n            this.subscribeToSaveResponse(this.servicelistService.create(this.servicelist));\n        }\n    };\n    ServicelistUpdateComponent.prototype.subscribeToSaveResponse = function (result) {\n        var _this = this;\n        result.subscribe(function (res) { return _this.onSaveSuccess(); }, function (res) { return _this.onSaveError(); });\n    };\n    ServicelistUpdateComponent.prototype.onSaveSuccess = function () {\n        this.isSaving = false;\n        this.previousState();\n    };\n    ServicelistUpdateComponent.prototype.onSaveError = function () {\n        this.isSaving = false;\n    };\n    ServicelistUpdateComponent.prototype.onError = function (errorMessage) {\n        this.jhiAlertService.error(errorMessage, null, null);\n    };\n    ServicelistUpdateComponent.prototype.trackCustomerById = function (index, item) {\n        return item.id;\n    };\n    Object.defineProperty(ServicelistUpdateComponent.prototype, \"servicelist\", {\n        get: function () {\n            return this._servicelist;\n        },\n        set: function (servicelist) {\n            this._servicelist = servicelist;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ServicelistUpdateComponent = tslib_1.__decorate([\n        core_1.Component({\n            selector: 'jhi-servicelist-update',\n            templateUrl: './servicelist-update.component.html'\n        }),\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof ng_jhipster_1.JhiAlertService !== \"undefined\" && ng_jhipster_1.JhiAlertService) === \"function\" && _a || Object, typeof (_b = typeof servicelist_service_1.ServicelistService !== \"undefined\" && servicelist_service_1.ServicelistService) === \"function\" && _b || Object, typeof (_c = typeof customer_1.CustomerService !== \"undefined\" && customer_1.CustomerService) === \"function\" && _c || Object, typeof (_d = typeof router_1.ActivatedRoute !== \"undefined\" && router_1.ActivatedRoute) === \"function\" && _d || Object])\n    ], ServicelistUpdateComponent);\n    return ServicelistUpdateComponent;\n    var _a, _b, _c, _d;\n}());\nexports.ServicelistUpdateComponent = ServicelistUpdateComponent;\n",{"version":3,"file":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/src/main/webapp/app/entities/servicelist/servicelist-update.component.ts","sourceRoot":"","sources":["/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/angular-router-loader/src/index.js!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/tslint-loader/index.js!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/src/main/webapp/app/entities/servicelist/servicelist-update.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { JhiAlertService } from 'ng-jhipster';\n\nimport { IServicelist } from 'app/shared/model/servicelist.model';\nimport { ServicelistService } from './servicelist.service';\nimport { ICustomer } from 'app/shared/model/customer.model';\nimport { CustomerService } from 'app/entities/customer';\n\n@Component({\n    selector: 'jhi-servicelist-update',\n    templateUrl: './servicelist-update.component.html'\n})\nexport class ServicelistUpdateComponent implements OnInit {\n    private _servicelist: IServicelist;\n    isSaving: boolean;\n\n    customers: ICustomer[];\n\n    constructor(\n        private jhiAlertService: JhiAlertService,\n        private servicelistService: ServicelistService,\n        private customerService: CustomerService,\n        private activatedRoute: ActivatedRoute\n    ) {}\n\n    ngOnInit() {\n        this.isSaving = false;\n        this.activatedRoute.data.subscribe(({ servicelist }) => {\n            this.servicelist = servicelist;\n        });\n        this.customerService.query({ filter: 'servicelist-is-null' }).subscribe(\n            (res: HttpResponse<ICustomer[]>) => {\n                if (!this.servicelist.customer || !this.servicelist.customer.id) {\n                    this.customers = res.body;\n                } else {\n                    this.customerService.find(this.servicelist.customer.id).subscribe(\n                        (subRes: HttpResponse<ICustomer>) => {\n                            this.customers = [subRes.body].concat(res.body);\n                        },\n                        (subRes: HttpErrorResponse) => this.onError(subRes.message)\n                    );\n                }\n            },\n            (res: HttpErrorResponse) => this.onError(res.message)\n        );\n    }\n\n    previousState() {\n        window.history.back();\n    }\n\n    save() {\n        this.isSaving = true;\n        if (this.servicelist.id !== undefined) {\n            this.subscribeToSaveResponse(this.servicelistService.update(this.servicelist));\n        } else {\n            this.subscribeToSaveResponse(this.servicelistService.create(this.servicelist));\n        }\n    }\n\n    private subscribeToSaveResponse(result: Observable<HttpResponse<IServicelist>>) {\n        result.subscribe((res: HttpResponse<IServicelist>) => this.onSaveSuccess(), (res: HttpErrorResponse) => this.onSaveError());\n    }\n\n    private onSaveSuccess() {\n        this.isSaving = false;\n        this.previousState();\n    }\n\n    private onSaveError() {\n        this.isSaving = false;\n    }\n\n    private onError(errorMessage: string) {\n        this.jhiAlertService.error(errorMessage, null, null);\n    }\n\n    trackCustomerById(index: number, item: ICustomer) {\n        return item.id;\n    }\n    get servicelist() {\n        return this._servicelist;\n    }\n\n    set servicelist(servicelist: IServicelist) {\n        this._servicelist = servicelist;\n    }\n}\n"]}]}