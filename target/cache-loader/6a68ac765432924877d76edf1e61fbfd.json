{"remainingRequest":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/thread-loader/dist/cjs.js??ref--10-2!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/ts-loader/index.js??ref--10-3!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/angular-router-loader/src/index.js!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/tslint-loader/index.js!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/src/main/webapp/app/entities/question-history/question-history-update.component.ts","dependencies":[{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/src/main/webapp/app/entities/question-history/question-history-update.component.ts","mtime":1546132670000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/cache-loader/dist/cjs.js","mtime":1546694544000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/thread-loader/dist/cjs.js","mtime":1546694542000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/ts-loader/index.js","mtime":1519365772000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar router_1 = require(\"@angular/router\");\nvar moment = require(\"moment\");\nvar input_constants_1 = require(\"app/shared/constants/input.constants\");\nvar ng_jhipster_1 = require(\"ng-jhipster\");\nvar question_history_service_1 = require(\"./question-history.service\");\nvar customer_1 = require(\"app/entities/customer\");\nvar question_1 = require(\"app/entities/question\");\nvar QuestionHistoryUpdateComponent = /** @class */ (function () {\n    function QuestionHistoryUpdateComponent(jhiAlertService, questionHistoryService, customerService, questionService, activatedRoute) {\n        this.jhiAlertService = jhiAlertService;\n        this.questionHistoryService = questionHistoryService;\n        this.customerService = customerService;\n        this.questionService = questionService;\n        this.activatedRoute = activatedRoute;\n    }\n    QuestionHistoryUpdateComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        this.isSaving = false;\n        this.activatedRoute.data.subscribe(function (_a) {\n            var questionHistory = _a.questionHistory;\n            _this.questionHistory = questionHistory;\n        });\n        this.customerService.query().subscribe(function (res) {\n            _this.customers = res.body;\n        }, function (res) { return _this.onError(res.message); });\n        this.questionService.query().subscribe(function (res) {\n            _this.questions = res.body;\n        }, function (res) { return _this.onError(res.message); });\n    };\n    QuestionHistoryUpdateComponent.prototype.previousState = function () {\n        window.history.back();\n    };\n    QuestionHistoryUpdateComponent.prototype.save = function () {\n        this.isSaving = true;\n        this.questionHistory.timestamp = moment(this.timestamp, input_constants_1.DATE_TIME_FORMAT);\n        if (this.questionHistory.id !== undefined) {\n            this.subscribeToSaveResponse(this.questionHistoryService.update(this.questionHistory));\n        }\n        else {\n            this.subscribeToSaveResponse(this.questionHistoryService.create(this.questionHistory));\n        }\n    };\n    QuestionHistoryUpdateComponent.prototype.subscribeToSaveResponse = function (result) {\n        var _this = this;\n        result.subscribe(function (res) { return _this.onSaveSuccess(); }, function (res) { return _this.onSaveError(); });\n    };\n    QuestionHistoryUpdateComponent.prototype.onSaveSuccess = function () {\n        this.isSaving = false;\n        this.previousState();\n    };\n    QuestionHistoryUpdateComponent.prototype.onSaveError = function () {\n        this.isSaving = false;\n    };\n    QuestionHistoryUpdateComponent.prototype.onError = function (errorMessage) {\n        this.jhiAlertService.error(errorMessage, null, null);\n    };\n    QuestionHistoryUpdateComponent.prototype.trackCustomerById = function (index, item) {\n        return item.id;\n    };\n    QuestionHistoryUpdateComponent.prototype.trackQuestionById = function (index, item) {\n        return item.id;\n    };\n    Object.defineProperty(QuestionHistoryUpdateComponent.prototype, \"questionHistory\", {\n        get: function () {\n            return this._questionHistory;\n        },\n        set: function (questionHistory) {\n            this._questionHistory = questionHistory;\n            this.timestamp = moment(questionHistory.timestamp).format(input_constants_1.DATE_TIME_FORMAT);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    QuestionHistoryUpdateComponent = tslib_1.__decorate([\n        core_1.Component({\n            selector: 'jhi-question-history-update',\n            templateUrl: './question-history-update.component.html'\n        }),\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof ng_jhipster_1.JhiAlertService !== \"undefined\" && ng_jhipster_1.JhiAlertService) === \"function\" && _a || Object, typeof (_b = typeof question_history_service_1.QuestionHistoryService !== \"undefined\" && question_history_service_1.QuestionHistoryService) === \"function\" && _b || Object, typeof (_c = typeof customer_1.CustomerService !== \"undefined\" && customer_1.CustomerService) === \"function\" && _c || Object, typeof (_d = typeof question_1.QuestionService !== \"undefined\" && question_1.QuestionService) === \"function\" && _d || Object, typeof (_e = typeof router_1.ActivatedRoute !== \"undefined\" && router_1.ActivatedRoute) === \"function\" && _e || Object])\n    ], QuestionHistoryUpdateComponent);\n    return QuestionHistoryUpdateComponent;\n    var _a, _b, _c, _d, _e;\n}());\nexports.QuestionHistoryUpdateComponent = QuestionHistoryUpdateComponent;\n",{"version":3,"file":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/src/main/webapp/app/entities/question-history/question-history-update.component.ts","sourceRoot":"","sources":["/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/angular-router-loader/src/index.js!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/tslint-loader/index.js!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/src/main/webapp/app/entities/question-history/question-history-update.component.ts"],"names":[],"mappings":";;;AAAA,sCAAkD;AAClD,0CAAiD;AAGjD,+BAAiC;AACjC,wEAAwE;AACxE,2CAA8C;AAG9C,uEAAoE;AAEpE,kDAAwD;AAExD,kDAAwD;AAMxD;IASI,wCACY,eAAgC,EAChC,sBAA8C,EAC9C,eAAgC,EAChC,eAAgC,EAChC,cAA8B;QAJ9B,oBAAe,GAAf,eAAe,CAAiB;QAChC,2BAAsB,GAAtB,sBAAsB,CAAwB;QAC9C,oBAAe,GAAf,eAAe,CAAiB;QAChC,oBAAe,GAAf,eAAe,CAAiB;QAChC,mBAAc,GAAd,cAAc,CAAgB;IACvC,CAAC;IAEJ,iDAAQ,GAAR;QAAA,iBAiBC;QAhBG,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,UAAC,EAAmB;gBAAjB,oCAAe;YACjD,KAAI,CAAC,eAAe,GAAG,eAAe,CAAC;QAC3C,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC,SAAS,CAClC,UAAC,GAA8B;YAC3B,KAAI,CAAC,SAAS,GAAG,GAAG,CAAC,IAAI,CAAC;QAC9B,CAAC,EACD,UAAC,GAAsB,IAAK,OAAA,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,EAAzB,CAAyB,CACxD,CAAC;QACF,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC,SAAS,CAClC,UAAC,GAA8B;YAC3B,KAAI,CAAC,SAAS,GAAG,GAAG,CAAC,IAAI,CAAC;QAC9B,CAAC,EACD,UAAC,GAAsB,IAAK,OAAA,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,EAAzB,CAAyB,CACxD,CAAC;IACN,CAAC;IAED,sDAAa,GAAb;QACI,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IAC1B,CAAC;IAED,6CAAI,GAAJ;QACI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,eAAe,CAAC,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,kCAAgB,CAAC,CAAC;QAC1E,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,EAAE,KAAK,SAAS,CAAC,CAAC,CAAC;YACxC,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;QAC3F,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;QAC3F,CAAC;IACL,CAAC;IAEO,gEAAuB,GAA/B,UAAgC,MAAkD;QAAlF,iBAEC;QADG,MAAM,CAAC,SAAS,CAAC,UAAC,GAAmC,IAAK,OAAA,KAAI,CAAC,aAAa,EAAE,EAApB,CAAoB,EAAE,UAAC,GAAsB,IAAK,OAAA,KAAI,CAAC,WAAW,EAAE,EAAlB,CAAkB,CAAC,CAAC;IACpI,CAAC;IAEO,sDAAa,GAArB;QACI,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,aAAa,EAAE,CAAC;IACzB,CAAC;IAEO,oDAAW,GAAnB;QACI,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IAC1B,CAAC;IAEO,gDAAO,GAAf,UAAgB,YAAoB;QAChC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,YAAY,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IACzD,CAAC;IAED,0DAAiB,GAAjB,UAAkB,KAAa,EAAE,IAAe;QAC5C,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC;IACnB,CAAC;IAED,0DAAiB,GAAjB,UAAkB,KAAa,EAAE,IAAe;QAC5C,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC;IACnB,CAAC;IACD,sBAAI,2DAAe;aAAnB;YACI,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC;QACjC,CAAC;aAED,UAAoB,eAAiC;YACjD,IAAI,CAAC,gBAAgB,GAAG,eAAe,CAAC;YACxC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,kCAAgB,CAAC,CAAC;QAChF,CAAC;;;OALA;IA5EQ,8BAA8B;QAJ1C,gBAAS,CAAC;YACP,QAAQ,EAAE,6BAA6B;YACvC,WAAW,EAAE,0CAA0C;SAC1D,CAAC;qEAW+B,6BAAe,oBAAf,6BAAe,sDACR,iDAAsB,oBAAtB,iDAAsB,sDAC7B,0BAAe,oBAAf,0BAAe,sDACf,0BAAe,oBAAf,0BAAe,sDAChB,uBAAc,oBAAd,uBAAc;OAdjC,8BAA8B,CAkF1C;IAAD,qCAAC;;CAAA,AAlFD,IAkFC;AAlFY,wEAA8B","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport * as moment from 'moment';\nimport { DATE_TIME_FORMAT } from 'app/shared/constants/input.constants';\nimport { JhiAlertService } from 'ng-jhipster';\n\nimport { IQuestionHistory } from 'app/shared/model/question-history.model';\nimport { QuestionHistoryService } from './question-history.service';\nimport { ICustomer } from 'app/shared/model/customer.model';\nimport { CustomerService } from 'app/entities/customer';\nimport { IQuestion } from 'app/shared/model/question.model';\nimport { QuestionService } from 'app/entities/question';\n\n@Component({\n    selector: 'jhi-question-history-update',\n    templateUrl: './question-history-update.component.html'\n})\nexport class QuestionHistoryUpdateComponent implements OnInit {\n    private _questionHistory: IQuestionHistory;\n    isSaving: boolean;\n\n    customers: ICustomer[];\n\n    questions: IQuestion[];\n    timestamp: string;\n\n    constructor(\n        private jhiAlertService: JhiAlertService,\n        private questionHistoryService: QuestionHistoryService,\n        private customerService: CustomerService,\n        private questionService: QuestionService,\n        private activatedRoute: ActivatedRoute\n    ) {}\n\n    ngOnInit() {\n        this.isSaving = false;\n        this.activatedRoute.data.subscribe(({ questionHistory }) => {\n            this.questionHistory = questionHistory;\n        });\n        this.customerService.query().subscribe(\n            (res: HttpResponse<ICustomer[]>) => {\n                this.customers = res.body;\n            },\n            (res: HttpErrorResponse) => this.onError(res.message)\n        );\n        this.questionService.query().subscribe(\n            (res: HttpResponse<IQuestion[]>) => {\n                this.questions = res.body;\n            },\n            (res: HttpErrorResponse) => this.onError(res.message)\n        );\n    }\n\n    previousState() {\n        window.history.back();\n    }\n\n    save() {\n        this.isSaving = true;\n        this.questionHistory.timestamp = moment(this.timestamp, DATE_TIME_FORMAT);\n        if (this.questionHistory.id !== undefined) {\n            this.subscribeToSaveResponse(this.questionHistoryService.update(this.questionHistory));\n        } else {\n            this.subscribeToSaveResponse(this.questionHistoryService.create(this.questionHistory));\n        }\n    }\n\n    private subscribeToSaveResponse(result: Observable<HttpResponse<IQuestionHistory>>) {\n        result.subscribe((res: HttpResponse<IQuestionHistory>) => this.onSaveSuccess(), (res: HttpErrorResponse) => this.onSaveError());\n    }\n\n    private onSaveSuccess() {\n        this.isSaving = false;\n        this.previousState();\n    }\n\n    private onSaveError() {\n        this.isSaving = false;\n    }\n\n    private onError(errorMessage: string) {\n        this.jhiAlertService.error(errorMessage, null, null);\n    }\n\n    trackCustomerById(index: number, item: ICustomer) {\n        return item.id;\n    }\n\n    trackQuestionById(index: number, item: IQuestion) {\n        return item.id;\n    }\n    get questionHistory() {\n        return this._questionHistory;\n    }\n\n    set questionHistory(questionHistory: IQuestionHistory) {\n        this._questionHistory = questionHistory;\n        this.timestamp = moment(questionHistory.timestamp).format(DATE_TIME_FORMAT);\n    }\n}\n"]}]}