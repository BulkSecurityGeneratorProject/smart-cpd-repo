{"remainingRequest":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/thread-loader/dist/cjs.js??ref--10-2!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/ts-loader/index.js??ref--10-3!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/angular-router-loader/src/index.js!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/tslint-loader/index.js!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/src/main/webapp/app/entities/company-request/company-request.component.ts","dependencies":[{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/src/main/webapp/app/entities/company-request/company-request.component.ts","mtime":1546132670000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/cache-loader/dist/cjs.js","mtime":1546694544000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/thread-loader/dist/cjs.js","mtime":1546694542000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/ts-loader/index.js","mtime":1519365772000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar router_1 = require(\"@angular/router\");\nvar ng_jhipster_1 = require(\"ng-jhipster\");\nvar core_2 = require(\"app/core\");\nvar shared_1 = require(\"app/shared\");\nvar company_request_service_1 = require(\"./company-request.service\");\nvar company_1 = require(\"app/entities/company\");\nvar CompanyRequestComponent = /** @class */ (function () {\n    function CompanyRequestComponent(companyRequestService, jhiAlertService, eventManager, parseLinks, activatedRoute, principal, companyService) {\n        this.companyRequestService = companyRequestService;\n        this.jhiAlertService = jhiAlertService;\n        this.eventManager = eventManager;\n        this.parseLinks = parseLinks;\n        this.activatedRoute = activatedRoute;\n        this.principal = principal;\n        this.companyService = companyService;\n        this.tempCompany = {};\n        this.companyRequests = [];\n        this.itemsPerPage = shared_1.ITEMS_PER_PAGE;\n        this.page = 0;\n        this.links = {\n            last: 0\n        };\n        this.predicate = 'id';\n        this.reverse = true;\n        this.currentSearch =\n            this.activatedRoute.snapshot && this.activatedRoute.snapshot.params['search']\n                ? this.activatedRoute.snapshot.params['search']\n                : '';\n    }\n    CompanyRequestComponent.prototype.loadAll = function () {\n        var _this = this;\n        if (this.currentSearch) {\n            this.companyRequestService\n                .search({\n                query: this.currentSearch,\n                page: this.page,\n                size: this.itemsPerPage,\n                sort: this.sort()\n            })\n                .subscribe(function (res) { return _this.paginateCompanyRequests(res.body, res.headers); }, function (res) { return _this.onError(res.message); });\n            return;\n        }\n        this.companyRequestService\n            .query({\n            page: this.page,\n            size: this.itemsPerPage,\n            sort: this.sort()\n        })\n            .subscribe(function (res) { return _this.paginateCompanyRequests(res.body, res.headers); }, function (res) { return _this.onError(res.message); });\n    };\n    CompanyRequestComponent.prototype.reset = function () {\n        this.page = 0;\n        this.companyRequests = [];\n        this.loadAll();\n    };\n    CompanyRequestComponent.prototype.loadPage = function (page) {\n        this.page = page;\n        this.loadAll();\n    };\n    CompanyRequestComponent.prototype.clear = function () {\n        this.companyRequests = [];\n        this.links = {\n            last: 0\n        };\n        this.page = 0;\n        this.predicate = 'id';\n        this.reverse = true;\n        this.currentSearch = '';\n        this.loadAll();\n    };\n    CompanyRequestComponent.prototype.search = function (query) {\n        if (!query) {\n            return this.clear();\n        }\n        this.companyRequests = [];\n        this.links = {\n            last: 0\n        };\n        this.page = 0;\n        this.predicate = '_score';\n        this.reverse = false;\n        this.currentSearch = query;\n        this.loadAll();\n    };\n    CompanyRequestComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        this.loadAll();\n        this.principal.identity().then(function (account) {\n            _this.currentAccount = account;\n        });\n        this.registerChangeInCompanyRequests();\n    };\n    CompanyRequestComponent.prototype.ngOnDestroy = function () {\n        this.eventManager.destroy(this.eventSubscriber);\n    };\n    CompanyRequestComponent.prototype.trackId = function (index, item) {\n        return item.id;\n    };\n    CompanyRequestComponent.prototype.registerChangeInCompanyRequests = function () {\n        var _this = this;\n        this.eventSubscriber = this.eventManager.subscribe('companyRequestListModification', function (response) { return _this.reset(); });\n    };\n    CompanyRequestComponent.prototype.sort = function () {\n        var result = [this.predicate + ',' + (this.reverse ? 'asc' : 'desc')];\n        if (this.predicate !== 'id') {\n            result.push('id');\n        }\n        return result;\n    };\n    CompanyRequestComponent.prototype.subscribeToSaveResponse = function (result) {\n        var _this = this;\n        result.subscribe(function (res) { return _this.onSaveSuccess(); }, function (res) { return _this.onSaveError(); });\n    };\n    CompanyRequestComponent.prototype.onSaveSuccess = function () {\n        this.isSaving = false;\n    };\n    CompanyRequestComponent.prototype.onSaveError = function () {\n        this.isSaving = false;\n    };\n    CompanyRequestComponent.prototype.addToDatabase = function (request) {\n        console.log('add to database - ' + request.name);\n        this.tempCompany.country = request.country;\n        this.tempCompany.city = request.city;\n        this.tempCompany.description = request.description;\n        this.tempCompany.cycledate = request.cycledate;\n        this.tempCompany.name = request.name;\n        this.tempCompany.phone = request.phone;\n        this.tempCompany.postalCode = request.postalCode;\n        this.tempCompany.notes = 'added via company request form';\n        this.tempCompany.streetAddress = request.streetAddress;\n        this.tempCompany.stateProvince = request.stateProvince;\n        this.tempCompany.url = request.url;\n        this.tempCompany.show = true;\n        this.subscribeToSaveResponse(this.companyService.create(this.tempCompany));\n    };\n    CompanyRequestComponent.prototype.paginateCompanyRequests = function (data, headers) {\n        this.links = this.parseLinks.parse(headers.get('link'));\n        this.totalItems = parseInt(headers.get('X-Total-Count'), 10);\n        for (var i = 0; i < data.length; i++) {\n            this.companyRequests.push(data[i]);\n        }\n    };\n    CompanyRequestComponent.prototype.onError = function (errorMessage) {\n        this.jhiAlertService.error(errorMessage, null, null);\n    };\n    CompanyRequestComponent = tslib_1.__decorate([\n        core_1.Component({\n            selector: 'jhi-company-request',\n            templateUrl: './company-request.component.html'\n        }),\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof company_request_service_1.CompanyRequestService !== \"undefined\" && company_request_service_1.CompanyRequestService) === \"function\" && _a || Object, typeof (_b = typeof ng_jhipster_1.JhiAlertService !== \"undefined\" && ng_jhipster_1.JhiAlertService) === \"function\" && _b || Object, typeof (_c = typeof ng_jhipster_1.JhiEventManager !== \"undefined\" && ng_jhipster_1.JhiEventManager) === \"function\" && _c || Object, typeof (_d = typeof ng_jhipster_1.JhiParseLinks !== \"undefined\" && ng_jhipster_1.JhiParseLinks) === \"function\" && _d || Object, typeof (_e = typeof router_1.ActivatedRoute !== \"undefined\" && router_1.ActivatedRoute) === \"function\" && _e || Object, typeof (_f = typeof core_2.Principal !== \"undefined\" && core_2.Principal) === \"function\" && _f || Object, typeof (_g = typeof company_1.CompanyService !== \"undefined\" && company_1.CompanyService) === \"function\" && _g || Object])\n    ], CompanyRequestComponent);\n    return CompanyRequestComponent;\n    var _a, _b, _c, _d, _e, _f, _g;\n}());\nexports.CompanyRequestComponent = CompanyRequestComponent;\n",{"version":3,"file":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/src/main/webapp/app/entities/company-request/company-request.component.ts","sourceRoot":"","sources":["/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/angular-router-loader/src/index.js!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/tslint-loader/index.js!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/src/main/webapp/app/entities/company-request/company-request.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { HttpErrorResponse, HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable, Subscription } from 'rxjs';\nimport { JhiEventManager, JhiParseLinks, JhiAlertService } from 'ng-jhipster';\n\nimport { ICompanyRequest } from 'app/shared/model/company-request.model';\nimport { Principal } from 'app/core';\n\nimport { ITEMS_PER_PAGE } from 'app/shared';\nimport { CompanyRequestService } from './company-request.service';\nimport { CompanyService } from 'app/entities/company';\nimport { ICompany } from 'app/shared/model/company.model';\n\n@Component({\n    selector: 'jhi-company-request',\n    templateUrl: './company-request.component.html'\n})\nexport class CompanyRequestComponent implements OnInit, OnDestroy {\n    companyRequests: ICompanyRequest[];\n    currentAccount: any;\n    eventSubscriber: Subscription;\n    itemsPerPage: number;\n    links: any;\n    page: any;\n    predicate: any;\n    queryCount: any;\n    reverse: any;\n    totalItems: number;\n    currentSearch: string;\n    isSaving: boolean;\n    tempCompany: ICompany = {};\n\n    constructor(\n        private companyRequestService: CompanyRequestService,\n        private jhiAlertService: JhiAlertService,\n        private eventManager: JhiEventManager,\n        private parseLinks: JhiParseLinks,\n        private activatedRoute: ActivatedRoute,\n        private principal: Principal,\n        private companyService: CompanyService\n    ) {\n        this.companyRequests = [];\n        this.itemsPerPage = ITEMS_PER_PAGE;\n        this.page = 0;\n        this.links = {\n            last: 0\n        };\n        this.predicate = 'id';\n        this.reverse = true;\n        this.currentSearch =\n            this.activatedRoute.snapshot && this.activatedRoute.snapshot.params['search']\n                ? this.activatedRoute.snapshot.params['search']\n                : '';\n    }\n\n    loadAll() {\n        if (this.currentSearch) {\n            this.companyRequestService\n                .search({\n                    query: this.currentSearch,\n                    page: this.page,\n                    size: this.itemsPerPage,\n                    sort: this.sort()\n                })\n                .subscribe(\n                    (res: HttpResponse<ICompanyRequest[]>) => this.paginateCompanyRequests(res.body, res.headers),\n                    (res: HttpErrorResponse) => this.onError(res.message)\n                );\n            return;\n        }\n        this.companyRequestService\n            .query({\n                page: this.page,\n                size: this.itemsPerPage,\n                sort: this.sort()\n            })\n            .subscribe(\n                (res: HttpResponse<ICompanyRequest[]>) => this.paginateCompanyRequests(res.body, res.headers),\n                (res: HttpErrorResponse) => this.onError(res.message)\n            );\n    }\n\n    reset() {\n        this.page = 0;\n        this.companyRequests = [];\n        this.loadAll();\n    }\n\n    loadPage(page) {\n        this.page = page;\n        this.loadAll();\n    }\n\n    clear() {\n        this.companyRequests = [];\n        this.links = {\n            last: 0\n        };\n        this.page = 0;\n        this.predicate = 'id';\n        this.reverse = true;\n        this.currentSearch = '';\n        this.loadAll();\n    }\n\n    search(query) {\n        if (!query) {\n            return this.clear();\n        }\n        this.companyRequests = [];\n        this.links = {\n            last: 0\n        };\n        this.page = 0;\n        this.predicate = '_score';\n        this.reverse = false;\n        this.currentSearch = query;\n        this.loadAll();\n    }\n\n    ngOnInit() {\n        this.loadAll();\n        this.principal.identity().then(account => {\n            this.currentAccount = account;\n        });\n        this.registerChangeInCompanyRequests();\n    }\n\n    ngOnDestroy() {\n        this.eventManager.destroy(this.eventSubscriber);\n    }\n\n    trackId(index: number, item: ICompanyRequest) {\n        return item.id;\n    }\n\n    registerChangeInCompanyRequests() {\n        this.eventSubscriber = this.eventManager.subscribe('companyRequestListModification', response => this.reset());\n    }\n\n    sort() {\n        const result = [this.predicate + ',' + (this.reverse ? 'asc' : 'desc')];\n        if (this.predicate !== 'id') {\n            result.push('id');\n        }\n        return result;\n    }\n\n    private subscribeToSaveResponse(result: Observable<HttpResponse<ICompany>>) {\n        result.subscribe((res: HttpResponse<ICompany>) => this.onSaveSuccess(), (res: HttpErrorResponse) => this.onSaveError());\n    }\n\n    private onSaveSuccess() {\n        this.isSaving = false;\n    }\n\n    private onSaveError() {\n        this.isSaving = false;\n    }\n\n    public addToDatabase(request: ICompanyRequest) {\n        console.log('add to database - ' + request.name);\n        this.tempCompany.country = request.country;\n        this.tempCompany.city = request.city;\n        this.tempCompany.description = request.description;\n        this.tempCompany.cycledate = request.cycledate;\n        this.tempCompany.name = request.name;\n        this.tempCompany.phone = request.phone;\n        this.tempCompany.postalCode = request.postalCode;\n        this.tempCompany.notes = 'added via company request form';\n        this.tempCompany.streetAddress = request.streetAddress;\n        this.tempCompany.stateProvince = request.stateProvince;\n        this.tempCompany.url = request.url;\n        this.tempCompany.show = true;\n        this.subscribeToSaveResponse(this.companyService.create(this.tempCompany));\n    }\n\n    private paginateCompanyRequests(data: ICompanyRequest[], headers: HttpHeaders) {\n        this.links = this.parseLinks.parse(headers.get('link'));\n        this.totalItems = parseInt(headers.get('X-Total-Count'), 10);\n        for (let i = 0; i < data.length; i++) {\n            this.companyRequests.push(data[i]);\n        }\n    }\n\n    private onError(errorMessage: string) {\n        this.jhiAlertService.error(errorMessage, null, null);\n    }\n}\n"]}]}