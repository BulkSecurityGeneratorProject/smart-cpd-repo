{"remainingRequest":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/thread-loader/dist/cjs.js??ref--10-2!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/ts-loader/index.js??ref--10-3!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/angular-router-loader/src/index.js!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/tslint-loader/index.js!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/src/main/webapp/app/entities/course/course.component.ts","dependencies":[{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/src/main/webapp/app/entities/course/course.component.ts","mtime":1546415630000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/cache-loader/dist/cjs.js","mtime":1546694544000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/thread-loader/dist/cjs.js","mtime":1546694542000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/ts-loader/index.js","mtime":1519365772000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar router_1 = require(\"@angular/router\");\nvar ng_jhipster_1 = require(\"ng-jhipster\");\nvar http_1 = require(\"@angular/common/http\");\nvar core_2 = require(\"app/core\");\nvar shared_1 = require(\"app/shared\");\nvar course_service_1 = require(\"./course.service\");\nvar customer_1 = require(\"app/entities/customer\");\nvar cart_1 = require(\"app/entities/cart\");\nvar course_cart_bridge_1 = require(\"app/entities/course-cart-bridge\");\nvar core_3 = require(\"app/core\");\nvar app_constants_1 = require(\"app/app.constants\");\nvar navbar_service_1 = require(\"app/layouts/navbar/navbar.service\");\nvar CourseComponent = /** @class */ (function () {\n    function CourseComponent(courseService, customerService, cartService, courseCartService, jhiAlertService, dataUtils, eventManager, parseLinks, activatedRoute, userService, trackService, principal, navbarService, http) {\n        this.courseService = courseService;\n        this.customerService = customerService;\n        this.cartService = cartService;\n        this.courseCartService = courseCartService;\n        this.jhiAlertService = jhiAlertService;\n        this.dataUtils = dataUtils;\n        this.eventManager = eventManager;\n        this.parseLinks = parseLinks;\n        this.activatedRoute = activatedRoute;\n        this.userService = userService;\n        this.trackService = trackService;\n        this.principal = principal;\n        this.navbarService = navbarService;\n        this.http = http;\n        this.userID = 0;\n        this.flagTemp = 0;\n        this.courses = [];\n        this.message = '';\n        this.bridgeCart = [];\n        this.itemsPerPage = shared_1.ITEMS_PER_PAGE;\n        this.page = 0;\n        this.links = {\n            last: 0\n        };\n        this.predicate = 'id';\n        this.reverse = true;\n        this.currentSearch =\n            this.activatedRoute.snapshot && this.activatedRoute.snapshot.params['search']\n                ? this.activatedRoute.snapshot.params['search']\n                : '';\n    }\n    CourseComponent.prototype.loadAll = function () {\n        var _this = this;\n        if (this.currentSearch) {\n            this.courseService\n                .search({\n                query: this.currentSearch,\n                page: this.page,\n                size: this.itemsPerPage,\n                sort: this.sort()\n            })\n                .subscribe(function (res) { return _this.paginateCourses(res.body, res.headers); }, function (res) { return _this.onError(res.message); });\n            return;\n        }\n        this.courseService\n            .query({\n            page: this.page,\n            size: this.itemsPerPage,\n            sort: this.sort()\n        })\n            .subscribe(function (res) { return _this.paginateCourses(res.body, res.headers); }, function (res) { return _this.onError(res.message); });\n    };\n    CourseComponent.prototype.reset = function () {\n        this.page = 0;\n        this.courses = [];\n        this.loadAll();\n    };\n    CourseComponent.prototype.loadPage = function (page) {\n        this.page = page;\n        this.loadAll();\n    };\n    CourseComponent.prototype.clear = function () {\n        this.courses = [];\n        this.links = {\n            last: 0\n        };\n        this.page = 0;\n        this.predicate = 'id';\n        this.reverse = true;\n        this.currentSearch = '';\n        this.loadAll();\n    };\n    CourseComponent.prototype.search = function (query) {\n        if (!query) {\n            return this.clear();\n        }\n        this.courses = [];\n        this.links = {\n            last: 0\n        };\n        this.page = 0;\n        this.predicate = '_score';\n        this.reverse = false;\n        this.currentSearch = query;\n        this.loadAll();\n    };\n    CourseComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        this.loadAll();\n        this.principal.identity().then(function (account) {\n            _this.currentAccount = account;\n            _this.userService.getemail(account.email).subscribe(function (users) {\n                _this.userID = users;\n                _this.customerService.getuser(_this.userID).subscribe(function (customer) {\n                    _this.customer = customer;\n                    _this.cartService.check(_this.customer.id).subscribe(function (carts) {\n                        _this.cart = carts;\n                        _this.courseCartService.getcollection(_this.cart.id).subscribe(function (bridges) {\n                            _this.bridgeCart = bridges;\n                        });\n                    });\n                });\n            });\n        });\n    };\n    CourseComponent.prototype.ngOnDestroy = function () {\n        /*this.eventSubscriber.unsubscribe();*/\n    };\n    CourseComponent.prototype.trackId = function (index, item) {\n        return item.id;\n    };\n    CourseComponent.prototype.byteSize = function (field) {\n        return this.dataUtils.byteSize(field);\n    };\n    CourseComponent.prototype.openFile = function (contentType, field) {\n        return this.dataUtils.openFile(contentType, field);\n    };\n    /** else if (this.courseService.check(course.id, this.customer.id)) {\n            this.message = 'You have already purchased this course';\n        }*/\n    CourseComponent.prototype.addCourse = function (course) {\n        var _this = this;\n        var resourceCheckUrl = app_constants_1.SERVER_API_URL + 'api/check/courses';\n        this.navbarService.increment();\n        this.flagTemp = this.findinCart(course);\n        if (this.flagTemp === 1) {\n            console.log('add course - customer is ' + this.customer);\n            this.http.post(resourceCheckUrl + \"/\" + course.id + \"?custid=\" + String(this.cart.id) + \"&cartid=\" + String(this.customer.id), {}).subscribe(function (flag) {\n                if (!flag) {\n                    /*this.showMessage('You have already purchased this course');*/\n                    _this.message = 'You have already purchased this course';\n                }\n                else {\n                    /**this.newBridgeCart = new CourseCartBridge();\n                    this.newBridgeCart.course = course;\n                    this.newBridgeCart.cart = this.cart;\n                    this.newBridgeCart.timestamp = moment();\n                    if (this.bridgeCart == null) {\n                        this.subscribeToSaveResponse(this.courseCartService.create(this.newBridgeCart));\n                        this.bridgeCart[0] = this.newBridgeCart;\n                    } else {\n                        this.subscribeToSaveResponse(this.courseCartService.create(this.newBridgeCart));\n                        this.bridgeCart[this.bridgeCart.length] = this.newBridgeCart;\n                    }*/\n                    _this.showMessage('Course Added');\n                    _this.message = 'Course Added';\n                    _this.navbarService.shouldCheck();\n                    _this.flagTemp = 0;\n                }\n            });\n        }\n    };\n    CourseComponent.prototype.showMessage = function (msg) {\n        var _this = this;\n        setInterval(function () {\n            _this.message = msg;\n        }, 7000);\n        this.message = '';\n    };\n    /**async save(temp: ICourseCartBridge) {\n        this.isSaving = true;\n        if (temp.id !== undefined) {\n            this.subscribeToSaveResponse(this.courseCartService.update(temp));\n        } else {\n            this.subscribeToSaveResponse(this.courseCartService.create(temp));\n        }\n    }*/\n    CourseComponent.prototype.subscribeToSaveResponse = function (result) {\n        var _this = this;\n        result.subscribe(function (res) { return _this.onSaveSuccess(); }, function (res) { return _this.onSaveError(); });\n    };\n    CourseComponent.prototype.onSaveSuccess = function () {\n        this.isSaving = false;\n    };\n    CourseComponent.prototype.onSaveError = function () {\n        this.isSaving = false;\n    };\n    CourseComponent.prototype.findinCart = function (course) {\n        for (var i = 0; i < this.bridgeCart.length; i++) {\n            if (this.bridgeCart[i].course.id === course.id) {\n                /*this.showMessage('This course is already added to your cart');*/\n                this.message = 'This course is already added to your cart';\n                return 2;\n            }\n        }\n        return 1;\n    };\n    CourseComponent.prototype.registerChangeInCourses = function () {\n        var _this = this;\n        this.eventSubscriber = this.eventManager.subscribe('courseListModification', function (response) { return _this.reset(); });\n    };\n    CourseComponent.prototype.sort = function () {\n        var result = [this.predicate + ',' + (this.reverse ? 'asc' : 'desc')];\n        if (this.predicate !== 'id') {\n            result.push('id');\n        }\n        return result;\n    };\n    CourseComponent.prototype.paginateCourses = function (data, headers) {\n        this.links = this.parseLinks.parse(headers.get('link'));\n        this.totalItems = parseInt(headers.get('X-Total-Count'), 10);\n        for (var i = 0; i < data.length; i++) {\n            this.courses.push(data[i]);\n        }\n    };\n    CourseComponent.prototype.onError = function (errorMessage) {\n        this.jhiAlertService.error(errorMessage, null, null);\n    };\n    CourseComponent = tslib_1.__decorate([\n        core_1.Component({\n            selector: 'jhi-course',\n            templateUrl: './course.component.html'\n        }),\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof course_service_1.CourseService !== \"undefined\" && course_service_1.CourseService) === \"function\" && _a || Object, typeof (_b = typeof customer_1.CustomerService !== \"undefined\" && customer_1.CustomerService) === \"function\" && _b || Object, typeof (_c = typeof cart_1.CartService !== \"undefined\" && cart_1.CartService) === \"function\" && _c || Object, typeof (_d = typeof course_cart_bridge_1.CourseCartBridgeService !== \"undefined\" && course_cart_bridge_1.CourseCartBridgeService) === \"function\" && _d || Object, typeof (_e = typeof ng_jhipster_1.JhiAlertService !== \"undefined\" && ng_jhipster_1.JhiAlertService) === \"function\" && _e || Object, typeof (_f = typeof ng_jhipster_1.JhiDataUtils !== \"undefined\" && ng_jhipster_1.JhiDataUtils) === \"function\" && _f || Object, typeof (_g = typeof ng_jhipster_1.JhiEventManager !== \"undefined\" && ng_jhipster_1.JhiEventManager) === \"function\" && _g || Object, typeof (_h = typeof ng_jhipster_1.JhiParseLinks !== \"undefined\" && ng_jhipster_1.JhiParseLinks) === \"function\" && _h || Object, typeof (_j = typeof router_1.ActivatedRoute !== \"undefined\" && router_1.ActivatedRoute) === \"function\" && _j || Object, typeof (_k = typeof core_2.UserService !== \"undefined\" && core_2.UserService) === \"function\" && _k || Object, typeof (_l = typeof core_3.JhiTrackerService !== \"undefined\" && core_3.JhiTrackerService) === \"function\" && _l || Object, typeof (_m = typeof core_2.Principal !== \"undefined\" && core_2.Principal) === \"function\" && _m || Object, typeof (_o = typeof navbar_service_1.NavbarService !== \"undefined\" && navbar_service_1.NavbarService) === \"function\" && _o || Object, typeof (_p = typeof http_1.HttpClient !== \"undefined\" && http_1.HttpClient) === \"function\" && _p || Object])\n    ], CourseComponent);\n    return CourseComponent;\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p;\n}());\nexports.CourseComponent = CourseComponent;\n",{"version":3,"file":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/src/main/webapp/app/entities/course/course.component.ts","sourceRoot":"","sources":["/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/angular-router-loader/src/index.js!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/tslint-loader/index.js!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/src/main/webapp/app/entities/course/course.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit, OnDestroy, ChangeDetectorRef } from '@angular/core';\nimport { HttpErrorResponse, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs/Subscription';\nimport { JhiEventManager, JhiParseLinks, JhiAlertService, JhiDataUtils } from 'ng-jhipster';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\n\nimport { ICourse } from 'app/shared/model/course.model';\nimport { Principal, UserService, IUser, Account } from 'app/core';\n\nimport { createRequestOption, DATE_TIME_FORMAT, ITEMS_PER_PAGE } from 'app/shared';\nimport { CourseService } from './course.service';\nimport { ICustomer } from 'app/shared/model/customer.model';\nimport { CustomerService } from 'app/entities/customer';\nimport { CartService } from 'app/entities/cart';\nimport { courseCartBridgePopupRoute, CourseCartBridgeService } from 'app/entities/course-cart-bridge';\nimport { ICart } from 'app/shared/model/cart.model';\nimport { CourseCartBridge, ICourseCartBridge } from 'app/shared/model/course-cart-bridge.model';\nimport * as moment from 'moment';\nimport { JhiTrackerService } from 'app/core';\nimport { IamUserArn } from 'aws-sdk/clients/codedeploy';\nimport { __values } from 'tslib';\nimport { SERVER_API_URL } from 'app/app.constants';\nimport { Observable } from 'rxjs';\nimport { updateSourceFile } from '@angular/compiler-cli/src/transformers/node_emitter';\nimport { map } from 'rxjs/operators';\nimport { NavbarService } from 'app/layouts/navbar/navbar.service';\n\n@Component({\n    selector: 'jhi-course',\n    templateUrl: './course.component.html'\n})\nexport class CourseComponent implements OnInit, OnDestroy {\n    courses: ICourse[];\n    /**reqdAccount: Account;*/\n    currentAccount: Account;\n    eventSubscriber: Subscription;\n    itemsPerPage: number;\n    links: any;\n    page: any;\n    predicate: any;\n    queryCount: any;\n    reverse: any;\n    totalItems: number;\n    currentSearch: string;\n    customer: ICustomer;\n    cart: ICart;\n    bridgeCart: ICourseCartBridge[];\n    newBridgeCart: ICourseCartBridge;\n    timestamp: string;\n    user: IUser;\n    userID = 0;\n    message: string;\n    isSaving: boolean;\n    flagTemp = 0;\n\n    constructor(\n        private courseService: CourseService,\n        private customerService: CustomerService,\n        private cartService: CartService,\n        private courseCartService: CourseCartBridgeService,\n        private jhiAlertService: JhiAlertService,\n        private dataUtils: JhiDataUtils,\n        private eventManager: JhiEventManager,\n        private parseLinks: JhiParseLinks,\n        private activatedRoute: ActivatedRoute,\n        private userService: UserService,\n        private trackService: JhiTrackerService,\n        private principal: Principal,\n        private navbarService: NavbarService,\n        private http: HttpClient\n    ) {\n        this.courses = [];\n        this.message = '';\n        this.bridgeCart = [];\n        this.itemsPerPage = ITEMS_PER_PAGE;\n        this.page = 0;\n        this.links = {\n            last: 0\n        };\n        this.predicate = 'id';\n        this.reverse = true;\n        this.currentSearch =\n            this.activatedRoute.snapshot && this.activatedRoute.snapshot.params['search']\n                ? this.activatedRoute.snapshot.params['search']\n                : '';\n    }\n\n    loadAll() {\n        if (this.currentSearch) {\n            this.courseService\n                .search({\n                    query: this.currentSearch,\n                    page: this.page,\n                    size: this.itemsPerPage,\n                    sort: this.sort()\n                })\n                .subscribe(\n                    (res: HttpResponse<ICourse[]>) => this.paginateCourses(res.body, res.headers),\n                    (res: HttpErrorResponse) => this.onError(res.message)\n                );\n            return;\n        }\n        this.courseService\n            .query({\n                page: this.page,\n                size: this.itemsPerPage,\n                sort: this.sort()\n            })\n            .subscribe(\n                (res: HttpResponse<ICourse[]>) => this.paginateCourses(res.body, res.headers),\n                (res: HttpErrorResponse) => this.onError(res.message)\n            );\n    }\n\n    reset() {\n        this.page = 0;\n        this.courses = [];\n        this.loadAll();\n    }\n\n    loadPage(page) {\n        this.page = page;\n        this.loadAll();\n    }\n\n    clear() {\n        this.courses = [];\n        this.links = {\n            last: 0\n        };\n        this.page = 0;\n        this.predicate = 'id';\n        this.reverse = true;\n        this.currentSearch = '';\n        this.loadAll();\n    }\n\n    search(query) {\n        if (!query) {\n            return this.clear();\n        }\n        this.courses = [];\n        this.links = {\n            last: 0\n        };\n        this.page = 0;\n        this.predicate = '_score';\n        this.reverse = false;\n        this.currentSearch = query;\n        this.loadAll();\n    }\n\n    ngOnInit() {\n        this.loadAll();\n        this.principal.identity().then(account => {\n            this.currentAccount = account;\n            this.userService.getemail(account.email).subscribe(users => {\n                this.userID = users;\n                this.customerService.getuser(this.userID).subscribe(customer => {\n                    this.customer = customer;\n                    this.cartService.check(this.customer.id).subscribe(carts => {\n                        this.cart = carts;\n                        this.courseCartService.getcollection(this.cart.id).subscribe(bridges => {\n                            this.bridgeCart = bridges;\n                        });\n                    });\n                });\n            });\n        });\n    }\n\n    ngOnDestroy() {\n        /*this.eventSubscriber.unsubscribe();*/\n    }\n\n    trackId(index: number, item: ICourse) {\n        return item.id;\n    }\n\n    byteSize(field) {\n        return this.dataUtils.byteSize(field);\n    }\n\n    openFile(contentType, field) {\n        return this.dataUtils.openFile(contentType, field);\n    }\n    /** else if (this.courseService.check(course.id, this.customer.id)) {\n            this.message = 'You have already purchased this course';\n        }*/\n\n    public addCourse(course: ICourse) {\n        const resourceCheckUrl = SERVER_API_URL + 'api/check/courses';\n        this.navbarService.increment();\n        this.flagTemp = this.findinCart(course);\n        if (this.flagTemp === 1) {\n            console.log('add course - customer is ' + this.customer);\n            this.http.post(`${resourceCheckUrl}/${course.id}?custid=` + String(this.cart.id) + `&cartid=` + String(this.customer.id), {}).subscribe(flag => {\n                if (!flag) {\n                    /*this.showMessage('You have already purchased this course');*/\n                    this.message = 'You have already purchased this course';\n                } else {\n                    /**this.newBridgeCart = new CourseCartBridge();\n                    this.newBridgeCart.course = course;\n                    this.newBridgeCart.cart = this.cart;\n                    this.newBridgeCart.timestamp = moment();\n                    if (this.bridgeCart == null) {\n                        this.subscribeToSaveResponse(this.courseCartService.create(this.newBridgeCart));\n                        this.bridgeCart[0] = this.newBridgeCart;\n                    } else {\n                        this.subscribeToSaveResponse(this.courseCartService.create(this.newBridgeCart));\n                        this.bridgeCart[this.bridgeCart.length] = this.newBridgeCart;\n                    }*/\n                    this.showMessage('Course Added');\n                    this.message = 'Course Added';\n                    this.navbarService.shouldCheck();\n                    this.flagTemp = 0;\n                }\n            });\n        }\n    }\n\n    showMessage(msg: string) {\n        setInterval(() => {\n            this.message = msg;\n        }, 7000);\n        this.message = '';\n    }\n\n    /**async save(temp: ICourseCartBridge) {\n        this.isSaving = true;\n        if (temp.id !== undefined) {\n            this.subscribeToSaveResponse(this.courseCartService.update(temp));\n        } else {\n            this.subscribeToSaveResponse(this.courseCartService.create(temp));\n        }\n    }*/\n\n    subscribeToSaveResponse(result: Observable<HttpResponse<ICourseCartBridge>>) {\n        result.subscribe((res: HttpResponse<ICourseCartBridge>) => this.onSaveSuccess(), (res: HttpErrorResponse) => this.onSaveError());\n    }\n\n    onSaveSuccess() {\n        this.isSaving = false;\n    }\n\n    onSaveError() {\n        this.isSaving = false;\n    }\n\n    findinCart(course: ICourse) {\n        for (let i = 0; i < this.bridgeCart.length; i++) {\n            if (this.bridgeCart[i].course.id === course.id) {\n                /*this.showMessage('This course is already added to your cart');*/\n                this.message = 'This course is already added to your cart';\n                return 2;\n            }\n        }\n        return 1;\n    }\n\n    registerChangeInCourses() {\n        this.eventSubscriber = this.eventManager.subscribe('courseListModification', response => this.reset());\n    }\n\n    sort() {\n        const result = [this.predicate + ',' + (this.reverse ? 'asc' : 'desc')];\n        if (this.predicate !== 'id') {\n            result.push('id');\n        }\n        return result;\n    }\n\n    private paginateCourses(data: ICourse[], headers: HttpHeaders) {\n        this.links = this.parseLinks.parse(headers.get('link'));\n        this.totalItems = parseInt(headers.get('X-Total-Count'), 10);\n        for (let i = 0; i < data.length; i++) {\n            this.courses.push(data[i]);\n        }\n    }\n\n    private onError(errorMessage: string) {\n        this.jhiAlertService.error(errorMessage, null, null);\n    }\n}\n"]}]}