{"remainingRequest":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/thread-loader/dist/cjs.js??ref--10-2!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/ts-loader/index.js??ref--10-3!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/angular-router-loader/src/index.js!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/tslint-loader/index.js!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/src/main/webapp/app/primeng/data/gmap/gmapdemo.component.ts","dependencies":[{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/src/main/webapp/app/primeng/data/gmap/gmapdemo.component.ts","mtime":1546132670000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/cache-loader/dist/cjs.js","mtime":1546694544000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/thread-loader/dist/cjs.js","mtime":1546694542000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/ts-loader/index.js","mtime":1519365772000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar GmapDemoComponent = /** @class */ (function () {\n    function GmapDemoComponent() {\n        this.activeIndex = 0;\n        this.msgs = [];\n    }\n    GmapDemoComponent.prototype.ngOnInit = function () {\n        this.options = {\n            center: { lat: 14.4426, lng: 79.9865 },\n            zoom: 8\n        };\n        this.initOverlays();\n        this.infoWindow = new google.maps.InfoWindow();\n    };\n    GmapDemoComponent.prototype.handleMapReady = function (event) {\n        this.msgs = [];\n        this.map = event.map;\n        this.msgs.push({ severity: 'info', summary: 'Map is ready', detail: 'Map is loaded' });\n    };\n    GmapDemoComponent.prototype.handleMapClick = function (event) {\n        this.msgs = [];\n        this.dialogVisible = true;\n        this.selectedPosition = event.latLng;\n        this.msgs.push({ severity: 'info', summary: 'Map is clicked', detail: this.selectedPosition });\n    };\n    GmapDemoComponent.prototype.handleOverlayClick = function (event) {\n        this.msgs = [];\n        var isMarker = event.overlay.getTitle !== undefined;\n        if (isMarker) {\n            var title = event.overlay.getTitle();\n            this.infoWindow.setContent('' + title + '');\n            this.infoWindow.open(event.map, event.overlay);\n            event.map.setCenter(event.overlay.getPosition());\n            this.msgs.push({ severity: 'info', summary: 'Marker Selected', detail: title });\n        }\n        else {\n            this.msgs.push({ severity: 'info', summary: 'Shape Selected', detail: '' });\n        }\n    };\n    GmapDemoComponent.prototype.handleZoomChanged = function (event) {\n        this.msgs.length = 0;\n        this.msgs.push({ severity: 'info', summary: 'The map zoom options are changed' });\n    };\n    GmapDemoComponent.prototype.handleMapDragEnd = function (event) {\n        this.msgs.length = 0;\n        this.msgs.push({ severity: 'info', summary: 'The map drag is reached end' });\n    };\n    GmapDemoComponent.prototype.addMarker = function () {\n        this.overlaysEvents.push(new google.maps.Marker({\n            position: {\n                lat: this.selectedPosition.lat(),\n                lng: this.selectedPosition.lng()\n            },\n            title: this.markerTitle,\n            draggable: this.draggable\n        }));\n        this.markerTitle = null;\n        this.dialogVisible = false;\n    };\n    GmapDemoComponent.prototype.handleDragStart = function (event) {\n        this.msgs = [];\n        this.msgs.push({ severity: 'info', summary: 'Marker Drag started', detail: event.overlay.getTitle() });\n    };\n    GmapDemoComponent.prototype.handleDragEnd = function (event) {\n        this.msgs = [];\n        this.msgs.push({ severity: 'info', summary: 'Marker Dragged', detail: event.overlay.getTitle() });\n    };\n    GmapDemoComponent.prototype.initOverlays = function () {\n        if (!this.overlays || !this.overlays.length) {\n            this.overlays = [\n                new google.maps.Marker({ position: { lat: 14.6188043, lng: 79.9630253 }, title: 'Talamanchi' }),\n                new google.maps.Marker({ position: { lat: 14.4290442, lng: 79.9456852 }, title: 'Nellore' }),\n                new google.maps.Polygon({\n                    paths: [\n                        { lat: 14.1413809, lng: 79.8254154 },\n                        { lat: 11.1513809, lng: 78.8354154 },\n                        { lat: 15.1313809, lng: 78.8254154 },\n                        { lat: 15.1613809, lng: 79.8854154 }\n                    ],\n                    strokeOpacity: 0.5,\n                    strokeWeight: 1,\n                    fillColor: '#1976D2',\n                    fillOpacity: 0.35\n                }),\n                new google.maps.Circle({\n                    center: { lat: 14.1413809, lng: 79.9513809 },\n                    fillColor: '#197642',\n                    fillOpacity: 0.25,\n                    strokeWeight: 1,\n                    radius: 25000\n                }),\n                new google.maps.Polyline({\n                    path: [{ lat: 14.1413809, lng: 79.9254154 }, { lat: 14.6413809, lng: 79.9254154 }],\n                    geodesic: true,\n                    strokeColor: '#F0F000',\n                    strokeOpacity: 0.5,\n                    strokeWeight: 2\n                })\n            ];\n        }\n        if (!this.overlaysEvents || !this.overlaysEvents.length) {\n            this.overlaysEvents = [\n                new google.maps.Marker({ position: { lat: 14.6188043, lng: 79.9630253 }, title: 'Talamanchi' }),\n                new google.maps.Marker({ position: { lat: 14.4290442, lng: 79.9456852 }, title: 'Nellore' }),\n                new google.maps.Polygon({\n                    paths: [\n                        { lat: 14.1413809, lng: 79.8254154 },\n                        { lat: 11.1513809, lng: 78.8354154 },\n                        { lat: 15.1313809, lng: 78.8254154 },\n                        { lat: 15.1613809, lng: 79.8854154 }\n                    ],\n                    strokeOpacity: 0.5,\n                    strokeWeight: 1,\n                    fillColor: '#1976D2',\n                    fillOpacity: 0.35\n                }),\n                new google.maps.Circle({\n                    center: { lat: 14.1413809, lng: 79.9513809 },\n                    fillColor: '#197642',\n                    fillOpacity: 0.25,\n                    strokeWeight: 1,\n                    radius: 25000\n                }),\n                new google.maps.Polyline({\n                    path: [{ lat: 14.1413809, lng: 79.9254154 }, { lat: 14.6413809, lng: 79.9254154 }],\n                    geodesic: true,\n                    strokeColor: '#F0F000',\n                    strokeOpacity: 0.5,\n                    strokeWeight: 2\n                })\n            ];\n        }\n    };\n    GmapDemoComponent.prototype.zoomIn = function (map) {\n        map.setZoom(map.getZoom() + 1);\n    };\n    GmapDemoComponent.prototype.zoomOut = function (map) {\n        map.setZoom(map.getZoom() - 1);\n    };\n    GmapDemoComponent.prototype.clear = function () {\n        this.overlaysEvents = [];\n    };\n    GmapDemoComponent.prototype.onChangeStep = function (label) {\n        this.msgs.length = 0;\n        this.msgs.push({ severity: 'info', summary: label });\n    };\n    GmapDemoComponent = tslib_1.__decorate([\n        core_1.Component({\n            selector: 'jhi-gmap',\n            templateUrl: './gmapdemo.component.html',\n            styles: []\n        })\n    ], GmapDemoComponent);\n    return GmapDemoComponent;\n}());\nexports.GmapDemoComponent = GmapDemoComponent;\n",{"version":3,"file":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/src/main/webapp/app/primeng/data/gmap/gmapdemo.component.ts","sourceRoot":"","sources":["/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/angular-router-loader/src/index.js!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/tslint-loader/index.js!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/src/main/webapp/app/primeng/data/gmap/gmapdemo.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { JhiLanguageService } from 'ng-jhipster';\nimport { Message } from 'primeng/components/common/api';\n\ndeclare var google: any;\n\n@Component({\n    selector: 'jhi-gmap',\n    templateUrl: './gmapdemo.component.html',\n    styles: []\n})\nexport class GmapDemoComponent implements OnInit {\n    options: any;\n\n    overlays: any[];\n\n    overlaysEvents: any[];\n\n    dialogVisible: boolean;\n\n    markerTitle: string;\n\n    map: any;\n\n    selectedPosition: any;\n\n    infoWindow: any;\n\n    draggable: boolean;\n\n    activeIndex = 0;\n\n    msgs: Message[] = [];\n\n    ngOnInit() {\n        this.options = {\n            center: { lat: 14.4426, lng: 79.9865 },\n            zoom: 8\n        };\n\n        this.initOverlays();\n\n        this.infoWindow = new google.maps.InfoWindow();\n    }\n\n    handleMapReady(event: any) {\n        this.msgs = [];\n        this.map = event.map;\n        this.msgs.push({ severity: 'info', summary: 'Map is ready', detail: 'Map is loaded' });\n    }\n\n    handleMapClick(event: any) {\n        this.msgs = [];\n        this.dialogVisible = true;\n        this.selectedPosition = event.latLng;\n        this.msgs.push({ severity: 'info', summary: 'Map is clicked', detail: this.selectedPosition });\n    }\n\n    handleOverlayClick(event: any) {\n        this.msgs = [];\n        const isMarker = event.overlay.getTitle !== undefined;\n\n        if (isMarker) {\n            const title = event.overlay.getTitle();\n            this.infoWindow.setContent('' + title + '');\n            this.infoWindow.open(event.map, event.overlay);\n            event.map.setCenter(event.overlay.getPosition());\n\n            this.msgs.push({ severity: 'info', summary: 'Marker Selected', detail: title });\n        } else {\n            this.msgs.push({ severity: 'info', summary: 'Shape Selected', detail: '' });\n        }\n    }\n\n    handleZoomChanged(event: any) {\n        this.msgs.length = 0;\n        this.msgs.push({ severity: 'info', summary: 'The map zoom options are changed' });\n    }\n\n    handleMapDragEnd(event: any) {\n        this.msgs.length = 0;\n        this.msgs.push({ severity: 'info', summary: 'The map drag is reached end' });\n    }\n\n    addMarker() {\n        this.overlaysEvents.push(\n            new google.maps.Marker({\n                position: {\n                    lat: this.selectedPosition.lat(),\n                    lng: this.selectedPosition.lng()\n                },\n                title: this.markerTitle,\n                draggable: this.draggable\n            })\n        );\n        this.markerTitle = null;\n        this.dialogVisible = false;\n    }\n\n    handleDragStart(event: any) {\n        this.msgs = [];\n        this.msgs.push({ severity: 'info', summary: 'Marker Drag started', detail: event.overlay.getTitle() });\n    }\n\n    handleDragEnd(event: any) {\n        this.msgs = [];\n        this.msgs.push({ severity: 'info', summary: 'Marker Dragged', detail: event.overlay.getTitle() });\n    }\n\n    initOverlays() {\n        if (!this.overlays || !this.overlays.length) {\n            this.overlays = [\n                new google.maps.Marker({ position: { lat: 14.6188043, lng: 79.9630253 }, title: 'Talamanchi' }),\n                new google.maps.Marker({ position: { lat: 14.4290442, lng: 79.9456852 }, title: 'Nellore' }),\n                new google.maps.Polygon({\n                    paths: [\n                        { lat: 14.1413809, lng: 79.8254154 },\n                        { lat: 11.1513809, lng: 78.8354154 },\n                        { lat: 15.1313809, lng: 78.8254154 },\n                        { lat: 15.1613809, lng: 79.8854154 }\n                    ],\n                    strokeOpacity: 0.5,\n                    strokeWeight: 1,\n                    fillColor: '#1976D2',\n                    fillOpacity: 0.35\n                }),\n                new google.maps.Circle({\n                    center: { lat: 14.1413809, lng: 79.9513809 },\n                    fillColor: '#197642',\n                    fillOpacity: 0.25,\n                    strokeWeight: 1,\n                    radius: 25000\n                }),\n                new google.maps.Polyline({\n                    path: [{ lat: 14.1413809, lng: 79.9254154 }, { lat: 14.6413809, lng: 79.9254154 }],\n                    geodesic: true,\n                    strokeColor: '#F0F000',\n                    strokeOpacity: 0.5,\n                    strokeWeight: 2\n                })\n            ];\n        }\n\n        if (!this.overlaysEvents || !this.overlaysEvents.length) {\n            this.overlaysEvents = [\n                new google.maps.Marker({ position: { lat: 14.6188043, lng: 79.9630253 }, title: 'Talamanchi' }),\n                new google.maps.Marker({ position: { lat: 14.4290442, lng: 79.9456852 }, title: 'Nellore' }),\n                new google.maps.Polygon({\n                    paths: [\n                        { lat: 14.1413809, lng: 79.8254154 },\n                        { lat: 11.1513809, lng: 78.8354154 },\n                        { lat: 15.1313809, lng: 78.8254154 },\n                        { lat: 15.1613809, lng: 79.8854154 }\n                    ],\n                    strokeOpacity: 0.5,\n                    strokeWeight: 1,\n                    fillColor: '#1976D2',\n                    fillOpacity: 0.35\n                }),\n                new google.maps.Circle({\n                    center: { lat: 14.1413809, lng: 79.9513809 },\n                    fillColor: '#197642',\n                    fillOpacity: 0.25,\n                    strokeWeight: 1,\n                    radius: 25000\n                }),\n                new google.maps.Polyline({\n                    path: [{ lat: 14.1413809, lng: 79.9254154 }, { lat: 14.6413809, lng: 79.9254154 }],\n                    geodesic: true,\n                    strokeColor: '#F0F000',\n                    strokeOpacity: 0.5,\n                    strokeWeight: 2\n                })\n            ];\n        }\n    }\n\n    zoomIn(map: any) {\n        map.setZoom(map.getZoom() + 1);\n    }\n\n    zoomOut(map: any) {\n        map.setZoom(map.getZoom() - 1);\n    }\n\n    clear() {\n        this.overlaysEvents = [];\n    }\n\n    onChangeStep(label: string) {\n        this.msgs.length = 0;\n        this.msgs.push({ severity: 'info', summary: label });\n    }\n}\n"]}]}