{"remainingRequest":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/thread-loader/dist/cjs.js??ref--10-2!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/ts-loader/index.js??ref--10-3!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/angular-router-loader/src/index.js!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/tslint-loader/index.js!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/src/main/webapp/app/entities/course-cart-bridge/course-cart-bridge-update.component.ts","dependencies":[{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/src/main/webapp/app/entities/course-cart-bridge/course-cart-bridge-update.component.ts","mtime":1546132670000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/cache-loader/dist/cjs.js","mtime":1546694544000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/thread-loader/dist/cjs.js","mtime":1546694542000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/ts-loader/index.js","mtime":1519365772000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar router_1 = require(\"@angular/router\");\nvar moment = require(\"moment\");\nvar input_constants_1 = require(\"app/shared/constants/input.constants\");\nvar ng_jhipster_1 = require(\"ng-jhipster\");\nvar course_cart_bridge_service_1 = require(\"./course-cart-bridge.service\");\nvar cart_1 = require(\"app/entities/cart\");\nvar course_1 = require(\"app/entities/course\");\nvar CourseCartBridgeUpdateComponent = /** @class */ (function () {\n    function CourseCartBridgeUpdateComponent(jhiAlertService, courseCartBridgeService, cartService, courseService, activatedRoute) {\n        this.jhiAlertService = jhiAlertService;\n        this.courseCartBridgeService = courseCartBridgeService;\n        this.cartService = cartService;\n        this.courseService = courseService;\n        this.activatedRoute = activatedRoute;\n    }\n    CourseCartBridgeUpdateComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        this.isSaving = false;\n        this.activatedRoute.data.subscribe(function (_a) {\n            var courseCartBridge = _a.courseCartBridge;\n            _this.courseCartBridge = courseCartBridge;\n        });\n        this.cartService.query().subscribe(function (res) {\n            _this.carts = res.body;\n        }, function (res) { return _this.onError(res.message); });\n        this.courseService.query().subscribe(function (res) {\n            _this.courses = res.body;\n        }, function (res) { return _this.onError(res.message); });\n    };\n    CourseCartBridgeUpdateComponent.prototype.previousState = function () {\n        window.history.back();\n    };\n    CourseCartBridgeUpdateComponent.prototype.save = function () {\n        this.isSaving = true;\n        this.courseCartBridge.timestamp = moment(this.timestamp, input_constants_1.DATE_TIME_FORMAT);\n        if (this.courseCartBridge.id !== undefined) {\n            this.subscribeToSaveResponse(this.courseCartBridgeService.update(this.courseCartBridge));\n        }\n        else {\n            this.subscribeToSaveResponse(this.courseCartBridgeService.create(this.courseCartBridge));\n        }\n    };\n    CourseCartBridgeUpdateComponent.prototype.subscribeToSaveResponse = function (result) {\n        var _this = this;\n        result.subscribe(function (res) { return _this.onSaveSuccess(); }, function (res) { return _this.onSaveError(); });\n    };\n    CourseCartBridgeUpdateComponent.prototype.onSaveSuccess = function () {\n        this.isSaving = false;\n        this.previousState();\n    };\n    CourseCartBridgeUpdateComponent.prototype.onSaveError = function () {\n        this.isSaving = false;\n    };\n    CourseCartBridgeUpdateComponent.prototype.onError = function (errorMessage) {\n        this.jhiAlertService.error(errorMessage, null, null);\n    };\n    CourseCartBridgeUpdateComponent.prototype.trackCartById = function (index, item) {\n        return item.id;\n    };\n    CourseCartBridgeUpdateComponent.prototype.trackCourseById = function (index, item) {\n        return item.id;\n    };\n    Object.defineProperty(CourseCartBridgeUpdateComponent.prototype, \"courseCartBridge\", {\n        get: function () {\n            return this._courseCartBridge;\n        },\n        set: function (courseCartBridge) {\n            this._courseCartBridge = courseCartBridge;\n            this.timestamp = moment(courseCartBridge.timestamp).format(input_constants_1.DATE_TIME_FORMAT);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CourseCartBridgeUpdateComponent = tslib_1.__decorate([\n        core_1.Component({\n            selector: 'jhi-course-cart-bridge-update',\n            templateUrl: './course-cart-bridge-update.component.html'\n        }),\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof ng_jhipster_1.JhiAlertService !== \"undefined\" && ng_jhipster_1.JhiAlertService) === \"function\" && _a || Object, typeof (_b = typeof course_cart_bridge_service_1.CourseCartBridgeService !== \"undefined\" && course_cart_bridge_service_1.CourseCartBridgeService) === \"function\" && _b || Object, typeof (_c = typeof cart_1.CartService !== \"undefined\" && cart_1.CartService) === \"function\" && _c || Object, typeof (_d = typeof course_1.CourseService !== \"undefined\" && course_1.CourseService) === \"function\" && _d || Object, typeof (_e = typeof router_1.ActivatedRoute !== \"undefined\" && router_1.ActivatedRoute) === \"function\" && _e || Object])\n    ], CourseCartBridgeUpdateComponent);\n    return CourseCartBridgeUpdateComponent;\n    var _a, _b, _c, _d, _e;\n}());\nexports.CourseCartBridgeUpdateComponent = CourseCartBridgeUpdateComponent;\n",{"version":3,"file":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/src/main/webapp/app/entities/course-cart-bridge/course-cart-bridge-update.component.ts","sourceRoot":"","sources":["/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/angular-router-loader/src/index.js!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/tslint-loader/index.js!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/src/main/webapp/app/entities/course-cart-bridge/course-cart-bridge-update.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport * as moment from 'moment';\nimport { DATE_TIME_FORMAT } from 'app/shared/constants/input.constants';\nimport { JhiAlertService } from 'ng-jhipster';\n\nimport { ICourseCartBridge } from 'app/shared/model/course-cart-bridge.model';\nimport { CourseCartBridgeService } from './course-cart-bridge.service';\nimport { ICart } from 'app/shared/model/cart.model';\nimport { CartService } from 'app/entities/cart';\nimport { ICourse } from 'app/shared/model/course.model';\nimport { CourseService } from 'app/entities/course';\n\n@Component({\n    selector: 'jhi-course-cart-bridge-update',\n    templateUrl: './course-cart-bridge-update.component.html'\n})\nexport class CourseCartBridgeUpdateComponent implements OnInit {\n    private _courseCartBridge: ICourseCartBridge;\n    isSaving: boolean;\n\n    carts: ICart[];\n\n    courses: ICourse[];\n    timestamp: string;\n\n    constructor(\n        private jhiAlertService: JhiAlertService,\n        private courseCartBridgeService: CourseCartBridgeService,\n        private cartService: CartService,\n        private courseService: CourseService,\n        private activatedRoute: ActivatedRoute\n    ) {}\n\n    ngOnInit() {\n        this.isSaving = false;\n        this.activatedRoute.data.subscribe(({ courseCartBridge }) => {\n            this.courseCartBridge = courseCartBridge;\n        });\n        this.cartService.query().subscribe(\n            (res: HttpResponse<ICart[]>) => {\n                this.carts = res.body;\n            },\n            (res: HttpErrorResponse) => this.onError(res.message)\n        );\n        this.courseService.query().subscribe(\n            (res: HttpResponse<ICourse[]>) => {\n                this.courses = res.body;\n            },\n            (res: HttpErrorResponse) => this.onError(res.message)\n        );\n    }\n\n    previousState() {\n        window.history.back();\n    }\n\n    save() {\n        this.isSaving = true;\n        this.courseCartBridge.timestamp = moment(this.timestamp, DATE_TIME_FORMAT);\n        if (this.courseCartBridge.id !== undefined) {\n            this.subscribeToSaveResponse(this.courseCartBridgeService.update(this.courseCartBridge));\n        } else {\n            this.subscribeToSaveResponse(this.courseCartBridgeService.create(this.courseCartBridge));\n        }\n    }\n\n    private subscribeToSaveResponse(result: Observable<HttpResponse<ICourseCartBridge>>) {\n        result.subscribe((res: HttpResponse<ICourseCartBridge>) => this.onSaveSuccess(), (res: HttpErrorResponse) => this.onSaveError());\n    }\n\n    private onSaveSuccess() {\n        this.isSaving = false;\n        this.previousState();\n    }\n\n    private onSaveError() {\n        this.isSaving = false;\n    }\n\n    private onError(errorMessage: string) {\n        this.jhiAlertService.error(errorMessage, null, null);\n    }\n\n    trackCartById(index: number, item: ICart) {\n        return item.id;\n    }\n\n    trackCourseById(index: number, item: ICourse) {\n        return item.id;\n    }\n    get courseCartBridge() {\n        return this._courseCartBridge;\n    }\n\n    set courseCartBridge(courseCartBridge: ICourseCartBridge) {\n        this._courseCartBridge = courseCartBridge;\n        this.timestamp = moment(courseCartBridge.timestamp).format(DATE_TIME_FORMAT);\n    }\n}\n"]}]}