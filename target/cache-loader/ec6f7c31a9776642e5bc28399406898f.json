{"remainingRequest":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/thread-loader/dist/cjs.js??ref--10-2!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/ts-loader/index.js??ref--10-3!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/angular-router-loader/src/index.js!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/tslint-loader/index.js!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/src/main/webapp/app/entities/company/company-update.component.ts","dependencies":[{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/src/main/webapp/app/entities/company/company-update.component.ts","mtime":1546132670000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/cache-loader/dist/cjs.js","mtime":1546694544000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/thread-loader/dist/cjs.js","mtime":1546694542000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/ts-loader/index.js","mtime":1519365772000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar router_1 = require(\"@angular/router\");\nvar moment = require(\"moment\");\nvar input_constants_1 = require(\"app/shared/constants/input.constants\");\nvar company_service_1 = require(\"./company.service\");\nvar core_2 = require(\"@agm/core\");\nvar CompanyUpdateComponent = /** @class */ (function () {\n    function CompanyUpdateComponent(companyService, activatedRoute, mapsAPILoader, ngZone) {\n        this.companyService = companyService;\n        this.activatedRoute = activatedRoute;\n        this.mapsAPILoader = mapsAPILoader;\n        this.ngZone = ngZone;\n    }\n    CompanyUpdateComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        this.isSaving = false;\n        this.activatedRoute.data.subscribe(function (_a) {\n            var company = _a.company;\n            _this.company = company;\n        });\n        this.mapsAPILoader.load().then(function () {\n            var autocomplete = new google.maps.places.Autocomplete(_this.searchElement.nativeElement, { types: ['address'] });\n            autocomplete.addListener('place_changed', function () {\n                _this.ngZone.run(function () {\n                    var place = autocomplete.getPlace();\n                    if (place.geometry === undefined || place.geometry === null) {\n                        return;\n                    }\n                    for (var i = 0; i < place.address_components.length; i++) {\n                        var addressType = place.address_components[i].types[0];\n                        switch (addressType) {\n                            case 'street_number':\n                                _this.addr = place.address_components[i].long_name;\n                                break;\n                            case 'route':\n                                _this.addr += ' ' + place.address_components[i].long_name;\n                                break;\n                            case 'locality':\n                                _this.city = place.address_components[i].long_name;\n                                break;\n                            case 'administrative_area_level_1':\n                                _this.state = place.address_components[i].long_name;\n                                break;\n                            case 'country':\n                                _this.country = place.address_components[i].short_name;\n                                break;\n                        }\n                    }\n                });\n            });\n        });\n    };\n    CompanyUpdateComponent.prototype.previousState = function () {\n        window.history.back();\n    };\n    CompanyUpdateComponent.prototype.save = function () {\n        this.isSaving = true;\n        this.company.streetAddress = this.addr;\n        this.company.city = this.city;\n        this.company.country = this.country;\n        this.company.stateProvince = this.state;\n        this.company.cycledate = moment(this.cycledate, input_constants_1.DATE_TIME_FORMAT);\n        if (this.company.id !== undefined) {\n            this.subscribeToSaveResponse(this.companyService.update(this.company));\n        }\n        else {\n            this.subscribeToSaveResponse(this.companyService.create(this.company));\n        }\n    };\n    CompanyUpdateComponent.prototype.subscribeToSaveResponse = function (result) {\n        var _this = this;\n        result.subscribe(function (res) { return _this.onSaveSuccess(); }, function (res) { return _this.onSaveError(); });\n    };\n    CompanyUpdateComponent.prototype.onSaveSuccess = function () {\n        this.isSaving = false;\n        this.previousState();\n    };\n    CompanyUpdateComponent.prototype.onSaveError = function () {\n        this.isSaving = false;\n    };\n    Object.defineProperty(CompanyUpdateComponent.prototype, \"company\", {\n        get: function () {\n            return this._company;\n        },\n        set: function (company) {\n            this._company = company;\n            this.cycledate = moment(company.cycledate).format(input_constants_1.DATE_TIME_FORMAT);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    tslib_1.__decorate([\n        core_1.ViewChild('search'),\n        tslib_1.__metadata(\"design:type\", typeof (_a = typeof core_1.ElementRef !== \"undefined\" && core_1.ElementRef) === \"function\" && _a || Object)\n    ], CompanyUpdateComponent.prototype, \"searchElement\", void 0);\n    CompanyUpdateComponent = tslib_1.__decorate([\n        core_1.Component({\n            selector: 'jhi-company-update',\n            templateUrl: './company-update.component.html'\n        }),\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_b = typeof company_service_1.CompanyService !== \"undefined\" && company_service_1.CompanyService) === \"function\" && _b || Object, typeof (_c = typeof router_1.ActivatedRoute !== \"undefined\" && router_1.ActivatedRoute) === \"function\" && _c || Object, typeof (_d = typeof core_2.MapsAPILoader !== \"undefined\" && core_2.MapsAPILoader) === \"function\" && _d || Object, typeof (_e = typeof core_1.NgZone !== \"undefined\" && core_1.NgZone) === \"function\" && _e || Object])\n    ], CompanyUpdateComponent);\n    return CompanyUpdateComponent;\n    var _a, _b, _c, _d, _e;\n}());\nexports.CompanyUpdateComponent = CompanyUpdateComponent;\n",{"version":3,"file":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/src/main/webapp/app/entities/company/company-update.component.ts","sourceRoot":"","sources":["/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/angular-router-loader/src/index.js!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/tslint-loader/index.js!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/src/main/webapp/app/entities/company/company-update.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, ElementRef, NgZone, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport * as moment from 'moment';\nimport { DATE_TIME_FORMAT } from 'app/shared/constants/input.constants';\n\nimport { ICompany } from 'app/shared/model/company.model';\nimport { CompanyService } from './company.service';\nimport { MapsAPILoader } from '@agm/core';\n\n@Component({\n    selector: 'jhi-company-update',\n    templateUrl: './company-update.component.html'\n})\nexport class CompanyUpdateComponent implements OnInit {\n    private _company: ICompany;\n    isSaving: boolean;\n    cycledate: string;\n    public addr: string;\n    public city: string;\n    public country: string;\n    public state: string;\n    @ViewChild('search') public searchElement: ElementRef;\n    constructor(\n        private companyService: CompanyService,\n        private activatedRoute: ActivatedRoute,\n        private mapsAPILoader: MapsAPILoader,\n        private ngZone: NgZone\n    ) {}\n\n    ngOnInit() {\n        this.isSaving = false;\n        this.activatedRoute.data.subscribe(({ company }) => {\n            this.company = company;\n        });\n        this.mapsAPILoader.load().then(() => {\n            const autocomplete = new google.maps.places.Autocomplete(this.searchElement.nativeElement, { types: ['address'] });\n            autocomplete.addListener('place_changed', () => {\n                this.ngZone.run(() => {\n                    const place: google.maps.places.PlaceResult = autocomplete.getPlace();\n                    if (place.geometry === undefined || place.geometry === null) {\n                        return;\n                    }\n                    for (let i = 0; i < place.address_components.length; i++) {\n                        const addressType = place.address_components[i].types[0];\n                        switch (addressType) {\n                            case 'street_number':\n                                this.addr = place.address_components[i].long_name;\n                                break;\n                            case 'route':\n                                this.addr += ' ' + place.address_components[i].long_name;\n                                break;\n                            case 'locality':\n                                this.city = place.address_components[i].long_name;\n                                break;\n                            case 'administrative_area_level_1':\n                                this.state = place.address_components[i].long_name;\n                                break;\n                            case 'country':\n                                this.country = place.address_components[i].short_name;\n                                break;\n                        }\n                    }\n                });\n            });\n        });\n    }\n\n    previousState() {\n        window.history.back();\n    }\n\n    save() {\n        this.isSaving = true;\n        this.company.streetAddress = this.addr;\n        this.company.city = this.city;\n        this.company.country = this.country;\n        this.company.stateProvince = this.state;\n        this.company.cycledate = moment(this.cycledate, DATE_TIME_FORMAT);\n        if (this.company.id !== undefined) {\n            this.subscribeToSaveResponse(this.companyService.update(this.company));\n        } else {\n            this.subscribeToSaveResponse(this.companyService.create(this.company));\n        }\n    }\n\n    private subscribeToSaveResponse(result: Observable<HttpResponse<ICompany>>) {\n        result.subscribe((res: HttpResponse<ICompany>) => this.onSaveSuccess(), (res: HttpErrorResponse) => this.onSaveError());\n    }\n\n    private onSaveSuccess() {\n        this.isSaving = false;\n        this.previousState();\n    }\n\n    private onSaveError() {\n        this.isSaving = false;\n    }\n    get company() {\n        return this._company;\n    }\n\n    set company(company: ICompany) {\n        this._company = company;\n        this.cycledate = moment(company.cycledate).format(DATE_TIME_FORMAT);\n    }\n}\n"]}]}