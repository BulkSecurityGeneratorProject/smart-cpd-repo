{"remainingRequest":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/thread-loader/dist/cjs.js??ref--10-2!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/ts-loader/index.js??ref--10-3!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/angular-router-loader/src/index.js!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/tslint-loader/index.js!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/src/main/webapp/app/entities/section/section-detail.component.ts","dependencies":[{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/src/main/webapp/app/entities/section/section-detail.component.ts","mtime":1546628102000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/cache-loader/dist/cjs.js","mtime":1546694544000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/thread-loader/dist/cjs.js","mtime":1546694542000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/ts-loader/index.js","mtime":1519365772000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar router_1 = require(\"@angular/router\");\nvar ng_jhipster_1 = require(\"ng-jhipster\");\nvar bookmark_1 = require(\"app/entities/bookmark\");\nvar time_course_log_1 = require(\"app/entities/time-course-log\");\nvar core_2 = require(\"app/core\");\nvar customer_1 = require(\"app/entities/customer\");\nvar core_3 = require(\"app/core\");\nvar section_history_1 = require(\"app/entities/section-history\");\nvar moment = require(\"moment\");\nvar question_1 = require(\"app/entities/question\");\nvar quiz_app_1 = require(\"app/entities/quiz-app\");\nvar SectionDetailComponent = /** @class */ (function () {\n    function SectionDetailComponent(dataUtils, activatedRoute, router, bookmarkService, timeCourseLogService, account, customerService, userService, principal, sectionHistoryService, questionService, quizAppService) {\n        this.dataUtils = dataUtils;\n        this.activatedRoute = activatedRoute;\n        this.router = router;\n        this.bookmarkService = bookmarkService;\n        this.timeCourseLogService = timeCourseLogService;\n        this.account = account;\n        this.customerService = customerService;\n        this.userService = userService;\n        this.principal = principal;\n        this.sectionHistoryService = sectionHistoryService;\n        this.questionService = questionService;\n        this.quizAppService = quizAppService;\n        this.pageNum = 1;\n        this.ellapsedTime = '00:00';\n        this.ellapsed = 0;\n        this.prevEllapsed = 0;\n        this.pause = false;\n        this.counter = 0;\n        this.counter2 = 0;\n        this.completeFlag = false;\n    }\n    SectionDetailComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        this.activatedRoute.data.subscribe(function (_a) {\n            var section = _a.section;\n            _this.section = section;\n        });\n        this.bookmarkService.getsection(this.section.id).subscribe(function (data) {\n            _this.bookmarks = data.body;\n        });\n        this.principal.identity().then(function (account) {\n            _this.currentAccount = account;\n            _this.custEmail = _this.currentAccount.email;\n        });\n        this.startDate = new Date();\n        this.userService.getemail(this.custEmail).subscribe(function (userId) {\n            _this.customerService.getuser(userId).subscribe(function (customer) {\n                _this.customer = customer;\n                _this.sectionHistoryService.getbycustomer(_this.customer.id, _this.section.id).subscribe(function (secHist) {\n                    if (secHist.body === null) {\n                        _this.tempHistory.section = _this.section;\n                        _this.tempHistory.customer = customer;\n                        _this.tempHistory.startdate = moment(_this.startDate);\n                        _this.tempHistory.lastactivedate = moment(new Date());\n                        _this.tempHistory.watched = false;\n                        _this.sectionHistoryService.create(_this.tempHistory).subscribe(function (createdEntity) {\n                            _this.prevHistory = createdEntity.body;\n                        });\n                    }\n                    else {\n                        _this.prevHistory = secHist.body;\n                        if (_this.counter2 === 0 && _this.section.type === 'pdf') {\n                            _this.pageNum = _this.prevHistory.stamp;\n                            _this.counter2++;\n                        }\n                        else if (_this.counter2 === 0) {\n                            _this.api.seekTime(_this.prevHistory.stamp, false);\n                            _this.onPlay();\n                            _this.counter2++;\n                        }\n                    }\n                });\n                /*this.sectionHistoryService.getpersistance(customer.id, this.section.id).subscribe(history => {\n                    if (history.body === null) {\n                        this.tempHistory.section = this.section;\n                        this.tempHistory.customer = customer;\n                        this.tempHistory.startdate = moment(this.startDate);\n                        this.sectionHistoryService.create(this.tempHistory).subscribe();\n                    } else {\n                        this.prevHistory = history.body;\n                        if (this.counter2 === 0 && this.section.type === 'pdf') {\n                            this.pageNum = this.prevHistory.stamp;\n                            this.counter2++;\n                        } else if (this.counter2 === 0) {\n                            this.api.seekTime(this.prevHistory.stamp, false);\n                            this.onPlay();\n                            this.counter2++;\n                        }\n                    }\n                });*/\n            });\n        });\n        setInterval(function () {\n            _this.ticksDate();\n            _this.isCompleted();\n        }, 1000);\n        if (this.section.type === 'pdf') {\n            var timerPdf_1 = setInterval(function () {\n                if (_this.completeFlag) {\n                    clearInterval(timerPdf_1);\n                }\n                _this.lastActive = new Date();\n                _this.prevHistory.lastactivedate = moment(_this.lastActive);\n                _this.prevHistory.stamp = _this.pageNum;\n                _this.sectionHistoryService.update(_this.prevHistory);\n            }, 30000);\n        }\n        else {\n            var timerMP4_1 = setInterval(function () {\n                // this.ticksSecond();\n                if (_this.completeFlag) {\n                    clearInterval(timerMP4_1);\n                }\n                _this.lastActive = new Date();\n                _this.prevHistory.lastactivedate = moment(_this.lastActive);\n                _this.prevHistory.stamp = _this.ellapsed;\n                _this.sectionHistoryService.update(_this.prevHistory);\n            }, 10000);\n        }\n        this.contentFile = this.section.content;\n        /**\n        const fileReader = new FileReader();\n        fileReader.onload = (e: Event) => {\n            this.arrayBuffer = fileReader.result;\n        };\n        fileReader.readAsArrayBuffer(this.section.content);\n        this.contentFile = new Uint8Array(this.arrayBuffer);\n        for (let i = 0; i < this.section.content.length; i++) {\n            this.contentFile[i] = this.section.content.charCodeAt(i);\n        }*/\n        this.pdflink = this.section.pdfUrl;\n        this.lastpageNum = this.section.totalPages;\n        this.quizName = this.section.quiz.name;\n        this.courseName = this.section.course.normCourses;\n    };\n    SectionDetailComponent.prototype.isCompleted = function () {\n        this.currentTime = this.api.currentTime;\n        this.isComplete = this.api.isCompleted;\n        if (this.isComplete || this.pageNum === this.lastpageNum) {\n            this.completeFlag = true;\n            this.completed = this.ellapsedTime;\n            if ((this.comingAgainFlag = false)) {\n                this.onPause();\n            }\n        }\n    };\n    SectionDetailComponent.prototype.onPause = function () {\n        this.pause = true;\n        this.api.pause();\n    };\n    SectionDetailComponent.prototype.referSlide = function (slide) {\n        this.pageNum = slide;\n    };\n    SectionDetailComponent.prototype.referVideo = function (time) {\n        var hrs = time.substring(0, 2);\n        var min = time.substring(3, 5);\n        var sec = time.substring(6, 8);\n        var hrsNum = Number(hrs);\n        var minNum = Number(min);\n        var secNum = Number(sec);\n        this.api.seekTime(hrsNum * 3600 + minNum * 60 + secNum);\n    };\n    SectionDetailComponent.prototype.onPlay = function () {\n        if (this.isComplete) {\n            this.comingAgainFlag = true;\n        }\n        this.prevEllapsed = this.ellapsed;\n        this.startDate = new Date();\n        this.pause = false;\n        this.api.play();\n    };\n    SectionDetailComponent.prototype.onStepBackward30 = function () {\n        if (this.isComplete) {\n            this.comingAgainFlag = true;\n        }\n        if (this.ellapsed <= 30) {\n            this.onReset();\n        }\n        else {\n            /**this.ellapsed = this.ellapsed - 30;*/\n            this.api.seekTime(this.ellapsed - 30, false);\n            this.onPlay();\n        }\n    };\n    SectionDetailComponent.prototype.onStepBackward60 = function () {\n        if (this.isComplete) {\n            this.comingAgainFlag = true;\n        }\n        if (this.ellapsed <= 60) {\n            this.onReset();\n        }\n        else {\n            /**this.ellapsed = this.ellapsed - 60;*/\n            this.api.seekTime(this.ellapsed - 60, false);\n            this.onPlay();\n        }\n    };\n    SectionDetailComponent.prototype.onStepBackward300 = function () {\n        if (this.isComplete) {\n            this.comingAgainFlag = true;\n        }\n        if (this.ellapsed <= 300) {\n            this.onReset();\n        }\n        else {\n            /**this.ellapsed = this.ellapsed - 300;*/\n            this.api.seekTime(this.ellapsed - 300, false);\n            this.onPlay();\n        }\n    };\n    SectionDetailComponent.prototype.onReset = function () {\n        if (this.isComplete) {\n            this.comingAgainFlag = true;\n        }\n        this.api.seekTime(0, false);\n        this.onPlay();\n    };\n    SectionDetailComponent.prototype.ticksDate = function () {\n        if (this.pause === false || this.section.type === 'pdf') {\n            this.nowDate = new Date();\n            this.ellapsed = (this.nowDate.getTime() - this.startDate.getTime()) / 1000 + this.prevEllapsed;\n            this.ellapsedTime = this.parseTime(this.ellapsed);\n            // return this.ellapsedTime;\n        }\n    };\n    SectionDetailComponent.prototype.ticksSecond = function () {\n        if (this.api.isCompleted) {\n            this.pause = true;\n        }\n        else {\n            if (this.pause === false) {\n                this.ellapsed++;\n                this.ellapsedTime = this.parseTime(this.ellapsed);\n                /**this.ellapsed = this.api.currentTime;\n                 this.ellapsedTime = this.parseTime(this.ellapsed);*/\n            }\n        }\n    };\n    SectionDetailComponent.prototype.parseTime = function (totalSeconds) {\n        var hrs = Math.floor(totalSeconds / 3600);\n        if (Number(hrs) < 1) {\n            var mins = Math.floor(totalSeconds / 60);\n            var secs = Math.round(totalSeconds % 60);\n            mins = (mins < 10 ? '0' : '') + mins;\n            secs = (secs < 10 ? '0' : '') + secs;\n            hrs = (hrs < 10 ? '0' : '') + hrs;\n            return mins + ':' + secs;\n        }\n        else {\n            var mins = Math.floor((totalSeconds % 3600) / 60);\n            var secs = Math.round(totalSeconds % 60);\n            mins = (mins < 10 ? '0' : '') + mins;\n            secs = (secs < 10 ? '0' : '') + secs;\n            hrs = (hrs < 10 ? '0' : '') + hrs;\n            return hrs + ':' + mins + ':' + secs;\n        }\n    };\n    SectionDetailComponent.prototype.gotoSlide = function (slide) {\n        this.pageNum = slide;\n    };\n    SectionDetailComponent.prototype.onPlayerReady = function (api) {\n        this.api = api;\n    };\n    SectionDetailComponent.prototype.nextPage = function () {\n        this.pageNum++;\n    };\n    SectionDetailComponent.prototype.prevPage = function () {\n        this.pageNum--;\n    };\n    SectionDetailComponent.prototype.moveToQuiz = function () {\n        var _this = this;\n        this.prevHistory.watched = true;\n        this.prevHistory.lastactivedate = moment(new Date());\n        this.sectionHistoryService.update(this.prevHistory).subscribe(function () {\n            _this.logs.timespent += _this.ellapsed;\n            _this.logs.course = _this.reqdCourse;\n            _this.logs.customer = _this.customer;\n            _this.logs.recorddate = moment();\n            _this.timeCourseLogService.create(_this.logs).subscribe(function () {\n                _this.tempQuizApp.currSection = _this.section;\n                _this.tempQuizApp.newSection = _this.section.quiz.newSection;\n                _this.tempQuizApp.quiz = _this.section.quiz;\n                _this.tempQuizApp.questions = _this.questionService.findbyquiz(_this.section.quiz.id).flatMap[0];\n                _this.quizAppService.create(_this.tempQuizApp).subscribe(function () {\n                    _this.router.navigateByUrl('quiz-app/' + _this.tempQuizApp.id.toString() + '/view');\n                });\n            });\n        });\n    };\n    SectionDetailComponent = tslib_1.__decorate([\n        core_1.Component({\n            selector: 'jhi-section-detail',\n            templateUrl: './section-detail.component.html'\n        }),\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof ng_jhipster_1.JhiDataUtils !== \"undefined\" && ng_jhipster_1.JhiDataUtils) === \"function\" && _a || Object, typeof (_b = typeof router_1.ActivatedRoute !== \"undefined\" && router_1.ActivatedRoute) === \"function\" && _b || Object, typeof (_c = typeof router_1.Router !== \"undefined\" && router_1.Router) === \"function\" && _c || Object, typeof (_d = typeof bookmark_1.BookmarkService !== \"undefined\" && bookmark_1.BookmarkService) === \"function\" && _d || Object, typeof (_e = typeof time_course_log_1.TimeCourseLogService !== \"undefined\" && time_course_log_1.TimeCourseLogService) === \"function\" && _e || Object, typeof (_f = typeof core_2.Account !== \"undefined\" && core_2.Account) === \"function\" && _f || Object, typeof (_g = typeof customer_1.CustomerService !== \"undefined\" && customer_1.CustomerService) === \"function\" && _g || Object, typeof (_h = typeof core_3.UserService !== \"undefined\" && core_3.UserService) === \"function\" && _h || Object, typeof (_j = typeof core_2.Principal !== \"undefined\" && core_2.Principal) === \"function\" && _j || Object, typeof (_k = typeof section_history_1.SectionHistoryService !== \"undefined\" && section_history_1.SectionHistoryService) === \"function\" && _k || Object, typeof (_l = typeof question_1.QuestionService !== \"undefined\" && question_1.QuestionService) === \"function\" && _l || Object, typeof (_m = typeof quiz_app_1.QuizAppService !== \"undefined\" && quiz_app_1.QuizAppService) === \"function\" && _m || Object])\n    ], SectionDetailComponent);\n    return SectionDetailComponent;\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n}());\nexports.SectionDetailComponent = SectionDetailComponent;\n",{"version":3,"file":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/src/main/webapp/app/entities/section/section-detail.component.ts","sourceRoot":"","sources":["/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/angular-router-loader/src/index.js!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/tslint-loader/index.js!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/src/main/webapp/app/entities/section/section-detail.component.ts"],"names":[],"mappings":";;;AAAA,sCAAkD;AAClD,0CAAyD;AACzD,2CAA2C;AAG3C,kDAAwD;AACxD,gEAAoE;AAGpE,iCAA8C;AAC9C,kDAAwD;AACxD,iCAAuC;AASvC,gEAAqE;AAErE,+BAAiC;AAEjC,kDAAwD;AACxD,kDAAuD;AAMvD;IAqCI,gCACY,SAAuB,EACvB,cAA8B,EAC9B,MAAc,EACd,eAAgC,EAChC,oBAA0C,EAC1C,OAAgB,EAChB,eAAgC,EAChC,WAAwB,EACxB,SAAoB,EACpB,qBAA4C,EAC5C,eAAgC,EAChC,cAA8B;QAX9B,cAAS,GAAT,SAAS,CAAc;QACvB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,WAAM,GAAN,MAAM,CAAQ;QACd,oBAAe,GAAf,eAAe,CAAiB;QAChC,yBAAoB,GAApB,oBAAoB,CAAsB;QAC1C,YAAO,GAAP,OAAO,CAAS;QAChB,oBAAe,GAAf,eAAe,CAAiB;QAChC,gBAAW,GAAX,WAAW,CAAa;QACxB,cAAS,GAAT,SAAS,CAAW;QACpB,0BAAqB,GAArB,qBAAqB,CAAuB;QAC5C,oBAAe,GAAf,eAAe,CAAiB;QAChC,mBAAc,GAAd,cAAc,CAAgB;QA/C1C,YAAO,GAAG,CAAC,CAAC;QAOZ,iBAAY,GAAG,OAAO,CAAC;QAEvB,aAAQ,GAAG,CAAC,CAAC;QACb,iBAAY,GAAG,CAAC,CAAC;QAEjB,UAAK,GAAG,KAAK,CAAC;QAId,YAAO,GAAG,CAAC,CAAC;QAaZ,aAAQ,GAAG,CAAC,CAAC;QAIb,iBAAY,GAAG,KAAK,CAAC;IAelB,CAAC;IAEJ,yCAAQ,GAAR;QAAA,iBAkGC;QAjGG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,UAAC,EAAW;gBAAT,oBAAO;YACzC,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QAC3B,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,UAAA,IAAI;YAC3D,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC;QAC/B,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,UAAA,OAAO;YAClC,KAAI,CAAC,cAAc,GAAG,OAAO,CAAC;YAC9B,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,cAAc,CAAC,KAAK,CAAC;QAC/C,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC;QAC5B,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,UAAA,MAAM;YACtD,KAAI,CAAC,eAAe,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,UAAA,QAAQ;gBACnD,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;gBACzB,KAAI,CAAC,qBAAqB,CAAC,aAAa,CAAC,KAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,KAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,SAAS,CAAE,UAAA,OAAO;oBAC1F,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC,CAAC;wBACxB,KAAI,CAAC,WAAW,CAAC,OAAO,GAAG,KAAI,CAAC,OAAO,CAAC;wBACxC,KAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,QAAQ,CAAC;wBACrC,KAAI,CAAC,WAAW,CAAC,SAAS,GAAG,MAAM,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC;wBACpD,KAAI,CAAC,WAAW,CAAC,cAAc,GAAG,MAAM,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;wBACrD,KAAI,CAAC,WAAW,CAAC,OAAO,GAAG,KAAK,CAAC;wBACjC,KAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,UAAA,aAAa;4BACvE,KAAI,CAAC,WAAW,GAAG,aAAa,CAAC,IAAI,CAAC;wBAC1C,CAAC,CAAC,CAAC;oBACP,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACJ,KAAI,CAAC,WAAW,GAAG,OAAO,CAAC,IAAI,CAAC;wBAChC,EAAE,CAAC,CAAC,KAAI,CAAC,QAAQ,KAAK,CAAC,IAAI,KAAI,CAAC,OAAO,CAAC,IAAI,KAAK,KAAK,CAAC,CAAC,CAAC;4BACrD,KAAI,CAAC,OAAO,GAAG,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC;4BACtC,KAAI,CAAC,QAAQ,EAAE,CAAC;wBACpB,CAAC;wBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAI,CAAC,QAAQ,KAAK,CAAC,CAAC,CAAC,CAAC;4BAC7B,KAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,KAAI,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;4BACjD,KAAI,CAAC,MAAM,EAAE,CAAC;4BACd,KAAI,CAAC,QAAQ,EAAE,CAAC;wBACpB,CAAC;oBACL,CAAC;gBACL,CAAC,CAAC,CAAC;gBACH;;;;;;;;;;;;;;;;;qBAiBK;YACT,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QACH,WAAW,CAAC;YACR,KAAI,CAAC,SAAS,EAAE,CAAC;YACjB,KAAI,CAAC,WAAW,EAAE,CAAC;QACvB,CAAC,EAAE,IAAI,CAAC,CAAC;QACT,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,KAAK,KAAK,CAAC,CAAC,CAAC;YAC9B,IAAM,UAAQ,GAAG,WAAW,CAAC;gBACzB,EAAE,CAAC,CAAC,KAAI,CAAC,YAAY,CAAC,CAAC,CAAC;oBACpB,aAAa,CAAC,UAAQ,CAAC,CAAC;gBAC5B,CAAC;gBACD,KAAI,CAAC,UAAU,GAAG,IAAI,IAAI,EAAE,CAAC;gBAC7B,KAAI,CAAC,WAAW,CAAC,cAAc,GAAG,MAAM,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC;gBAC1D,KAAI,CAAC,WAAW,CAAC,KAAK,GAAG,KAAI,CAAC,OAAO,CAAC;gBACtC,KAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC;YACxD,CAAC,EAAE,KAAK,CAAC,CAAC;QACd,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAM,UAAQ,GAAG,WAAW,CAAC;gBACzB,sBAAsB;gBACtB,EAAE,CAAC,CAAC,KAAI,CAAC,YAAY,CAAC,CAAC,CAAC;oBACpB,aAAa,CAAC,UAAQ,CAAC,CAAC;gBAC5B,CAAC;gBACD,KAAI,CAAC,UAAU,GAAG,IAAI,IAAI,EAAE,CAAC;gBAC7B,KAAI,CAAC,WAAW,CAAC,cAAc,GAAG,MAAM,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC;gBAC1D,KAAI,CAAC,WAAW,CAAC,KAAK,GAAG,KAAI,CAAC,QAAQ,CAAC;gBACvC,KAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC;YACxD,CAAC,EAAE,KAAK,CAAC,CAAC;QACd,CAAC;QACD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;QACxC;;;;;;;;;WASG;QACH,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;QACnC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;QAC3C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC;QACvC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,WAAW,CAAC;IACtD,CAAC;IAED,4CAAW,GAAX;QACI,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC;QACxC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC;QACvC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YACvD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC;YACnC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;gBACjC,IAAI,CAAC,OAAO,EAAE,CAAC;YACnB,CAAC;QACL,CAAC;IACL,CAAC;IAED,wCAAO,GAAP;QACI,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;IACrB,CAAC;IAED,2CAAU,GAAV,UAAW,KAAa;QACpB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IACzB,CAAC;IAED,2CAAU,GAAV,UAAW,IAAY;QACnB,IAAM,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACjC,IAAM,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACjC,IAAM,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACjC,IAAM,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;QAC3B,IAAM,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;QAC3B,IAAM,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;QAC3B,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,GAAG,MAAM,GAAG,EAAE,GAAG,MAAM,CAAC,CAAC;IAC5D,CAAC;IAED,uCAAM,GAAN;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YAClB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAChC,CAAC;QACD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC;QAClC,IAAI,CAAC,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC;QAC5B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;IACpB,CAAC;IAED,iDAAgB,GAAhB;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YAClB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAChC,CAAC;QACD,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,EAAE,CAAC,CAAC,CAAC;YACtB,IAAI,CAAC,OAAO,EAAE,CAAC;QACnB,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,wCAAwC;YACxC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,GAAG,EAAE,EAAE,KAAK,CAAC,CAAC;YAC7C,IAAI,CAAC,MAAM,EAAE,CAAC;QAClB,CAAC;IACL,CAAC;IAED,iDAAgB,GAAhB;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YAClB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAChC,CAAC;QACD,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,EAAE,CAAC,CAAC,CAAC;YACtB,IAAI,CAAC,OAAO,EAAE,CAAC;QACnB,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,wCAAwC;YACxC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,GAAG,EAAE,EAAE,KAAK,CAAC,CAAC;YAC7C,IAAI,CAAC,MAAM,EAAE,CAAC;QAClB,CAAC;IACL,CAAC;IAED,kDAAiB,GAAjB;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YAClB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAChC,CAAC;QACD,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,GAAG,CAAC,CAAC,CAAC;YACvB,IAAI,CAAC,OAAO,EAAE,CAAC;QACnB,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,yCAAyC;YACzC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,GAAG,GAAG,EAAE,KAAK,CAAC,CAAC;YAC9C,IAAI,CAAC,MAAM,EAAE,CAAC;QAClB,CAAC;IACL,CAAC;IAED,wCAAO,GAAP;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YAClB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAChC,CAAC;QACD,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;QAC5B,IAAI,CAAC,MAAM,EAAE,CAAC;IAClB,CAAC;IAED,0CAAS,GAAT;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,KAAK,KAAK,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,KAAK,KAAK,CAAC,CAAC,CAAC;YACtD,IAAI,CAAC,OAAO,GAAG,IAAI,IAAI,EAAE,CAAC;YAC1B,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC;YAC/F,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAClD,4BAA4B;QAChC,CAAC;IACL,CAAC;IAED,4CAAW,GAAX;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC;YACvB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QACtB,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,KAAK,KAAK,CAAC,CAAC,CAAC;gBACvB,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAChB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAClD;qEACqD;YACzD,CAAC;QACL,CAAC;IACL,CAAC;IAED,0CAAS,GAAT,UAAU,YAAoB;QAC1B,IAAI,GAAG,GAAoB,IAAI,CAAC,KAAK,CAAC,YAAY,GAAG,IAAI,CAAC,CAAC;QAC3D,EAAE,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAClB,IAAI,IAAI,GAAoB,IAAI,CAAC,KAAK,CAAC,YAAY,GAAG,EAAE,CAAC,CAAC;YAC1D,IAAI,IAAI,GAAoB,IAAI,CAAC,KAAK,CAAC,YAAY,GAAG,EAAE,CAAC,CAAC;YAC1D,IAAI,GAAG,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC;YACrC,IAAI,GAAG,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC;YACrC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;YAClC,MAAM,CAAC,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC;QAC7B,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,IAAI,GAAoB,IAAI,CAAC,KAAK,CAAC,CAAC,YAAY,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;YACnE,IAAI,IAAI,GAAoB,IAAI,CAAC,KAAK,CAAC,YAAY,GAAG,EAAE,CAAC,CAAC;YAC1D,IAAI,GAAG,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC;YACrC,IAAI,GAAG,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC;YACrC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;YAClC,MAAM,CAAC,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC;QACzC,CAAC;IACL,CAAC;IAED,0CAAS,GAAT,UAAU,KAAa;QACnB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IACzB,CAAC;IAED,8CAAa,GAAb,UAAc,GAAU;QACpB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;IACnB,CAAC;IAED,yCAAQ,GAAR;QACI,IAAI,CAAC,OAAO,EAAE,CAAC;IACnB,CAAC;IAED,yCAAQ,GAAR;QACI,IAAI,CAAC,OAAO,EAAE,CAAC;IACnB,CAAC;IAED,2CAAU,GAAV;QAAA,iBAkBC;QAjBG,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,IAAI,CAAC;QAChC,IAAI,CAAC,WAAW,CAAC,cAAc,GAAG,MAAM,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;QACrD,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC;YAC1D,KAAI,CAAC,IAAI,CAAC,SAAS,IAAI,KAAI,CAAC,QAAQ,CAAC;YACrC,KAAI,CAAC,IAAI,CAAC,MAAM,GAAG,KAAI,CAAC,UAAU,CAAC;YACnC,KAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,KAAI,CAAC,QAAQ,CAAC;YACnC,KAAI,CAAC,IAAI,CAAC,UAAU,GAAG,MAAM,EAAE,CAAC;YAChC,KAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC;gBAClD,KAAI,CAAC,WAAW,CAAC,WAAW,GAAG,KAAI,CAAC,OAAO,CAAC;gBAC5C,KAAI,CAAC,WAAW,CAAC,UAAU,GAAG,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC;gBAC3D,KAAI,CAAC,WAAW,CAAC,IAAI,GAAG,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC;gBAC1C,KAAI,CAAC,WAAW,CAAC,SAAS,GAAG,KAAI,CAAC,eAAe,CAAC,UAAU,CAAC,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;gBAC9F,KAAI,CAAC,cAAc,CAAC,MAAM,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC;oBACnD,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,WAAW,GAAG,KAAI,CAAC,WAAW,CAAC,EAAE,CAAC,QAAQ,EAAE,GAAG,OAAO,CAAC,CAAC;gBACtF,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IA3TQ,sBAAsB;QAJlC,gBAAS,CAAC;YACP,QAAQ,EAAE,oBAAoB;YAC9B,WAAW,EAAE,iCAAiC;SACjD,CAAC;qEAuCyB,0BAAY,oBAAZ,0BAAY,sDACP,uBAAc,oBAAd,uBAAc,sDACtB,eAAM,oBAAN,eAAM,sDACG,0BAAe,oBAAf,0BAAe,sDACV,sCAAoB,oBAApB,sCAAoB,sDACjC,cAAO,oBAAP,cAAO,sDACC,0BAAe,oBAAf,0BAAe,sDACnB,kBAAW,oBAAX,kBAAW,sDACb,gBAAS,oBAAT,gBAAS,sDACG,uCAAqB,oBAArB,uCAAqB,sDAC3B,0BAAe,oBAAf,0BAAe,sDAChB,yBAAc,oBAAd,yBAAc;OAjDjC,sBAAsB,CA4TlC;IAAD,6BAAC;;CAAA,AA5TD,IA4TC;AA5TY,wDAAsB","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { JhiDataUtils } from 'ng-jhipster';\nimport { ISection } from 'app/shared/model/section.model';\nimport { VgAPI } from 'videogular2/core';\nimport { BookmarkService } from 'app/entities/bookmark';\nimport { TimeCourseLogService } from 'app/entities/time-course-log';\nimport { ITimeCourseLog } from 'app/shared/model/time-course-log.model';\nimport { IBookmark } from 'app/shared/model/bookmark.model';\nimport { Account, Principal } from 'app/core';\nimport { CustomerService } from 'app/entities/customer';\nimport { UserService } from 'app/core';\nimport { CourseService } from 'app/entities/course';\nimport { interval } from 'rxjs';\nimport { templateJitUrl } from '@angular/compiler';\nimport { numberOfBytes } from 'ng-jhipster/src/directive/number-of-bytes';\nimport { logsRoute } from 'app/admin';\nimport { Customer, ICustomer } from 'app/shared/model/customer.model';\nimport { __values } from 'tslib';\nimport { Course } from 'app/shared/model/course.model';\nimport { SectionHistoryService } from 'app/entities/section-history';\nimport { ISectionHistory } from 'app/shared/model/section-history.model';\nimport * as moment from 'moment';\nimport { IQuizApp } from 'app/shared/model/quiz-app.model';\nimport { QuestionService } from 'app/entities/question';\nimport { QuizAppService } from 'app/entities/quiz-app';\n\n@Component({\n    selector: 'jhi-section-detail',\n    templateUrl: './section-detail.component.html'\n})\nexport class SectionDetailComponent implements OnInit {\n    section: ISection;\n    pageNum = 1;\n    lastpageNum: number;\n    test: any;\n    pdflink: string;\n    quizName: string;\n    courseName: string;\n    api: VgAPI;\n    ellapsedTime = '00:00';\n    completed: string;\n    ellapsed = 0;\n    prevEllapsed = 0;\n    bookmarks: IBookmark[];\n    pause = false;\n    startDate: Date;\n    nowDate: Date;\n    lastActive: Date;\n    counter = 0;\n    diff: any;\n    isComplete: Boolean;\n    comingAgainFlag: Boolean;\n    currentTime: number;\n    arrayBuffer: any;\n    contentFile: Object;\n    custEmail: string;\n    reqdCourse: Course;\n    logs: ITimeCourseLog;\n    currentAccount: any;\n    tempHistory: ISectionHistory;\n    prevHistory: ISectionHistory;\n    counter2 = 0;\n    timeLog: ITimeCourseLog;\n    customer: ICustomer;\n    tempQuizApp: IQuizApp;\n    completeFlag = false;\n\n    constructor(\n        private dataUtils: JhiDataUtils,\n        private activatedRoute: ActivatedRoute,\n        private router: Router,\n        private bookmarkService: BookmarkService,\n        private timeCourseLogService: TimeCourseLogService,\n        private account: Account,\n        private customerService: CustomerService,\n        private userService: UserService,\n        private principal: Principal,\n        private sectionHistoryService: SectionHistoryService,\n        private questionService: QuestionService,\n        private quizAppService: QuizAppService\n    ) {}\n\n    ngOnInit() {\n        this.activatedRoute.data.subscribe(({ section }) => {\n            this.section = section;\n        });\n        this.bookmarkService.getsection(this.section.id).subscribe(data => {\n            this.bookmarks = data.body;\n        });\n        this.principal.identity().then(account => {\n            this.currentAccount = account;\n            this.custEmail = this.currentAccount.email;\n        });\n        this.startDate = new Date();\n        this.userService.getemail(this.custEmail).subscribe(userId => {\n            this.customerService.getuser(userId).subscribe(customer => {\n                this.customer = customer;\n                this.sectionHistoryService.getbycustomer(this.customer.id, this.section.id).subscribe( secHist => {\n                    if (secHist.body === null) {\n                        this.tempHistory.section = this.section;\n                        this.tempHistory.customer = customer;\n                        this.tempHistory.startdate = moment(this.startDate);\n                        this.tempHistory.lastactivedate = moment(new Date());\n                        this.tempHistory.watched = false;\n                        this.sectionHistoryService.create(this.tempHistory).subscribe(createdEntity => {\n                            this.prevHistory = createdEntity.body;\n                        });\n                    } else {\n                        this.prevHistory = secHist.body;\n                        if (this.counter2 === 0 && this.section.type === 'pdf') {\n                            this.pageNum = this.prevHistory.stamp;\n                            this.counter2++;\n                        } else if (this.counter2 === 0) {\n                            this.api.seekTime(this.prevHistory.stamp, false);\n                            this.onPlay();\n                            this.counter2++;\n                        }\n                    }\n                });\n                /*this.sectionHistoryService.getpersistance(customer.id, this.section.id).subscribe(history => {\n                    if (history.body === null) {\n                        this.tempHistory.section = this.section;\n                        this.tempHistory.customer = customer;\n                        this.tempHistory.startdate = moment(this.startDate);\n                        this.sectionHistoryService.create(this.tempHistory).subscribe();\n                    } else {\n                        this.prevHistory = history.body;\n                        if (this.counter2 === 0 && this.section.type === 'pdf') {\n                            this.pageNum = this.prevHistory.stamp;\n                            this.counter2++;\n                        } else if (this.counter2 === 0) {\n                            this.api.seekTime(this.prevHistory.stamp, false);\n                            this.onPlay();\n                            this.counter2++;\n                        }\n                    }\n                });*/\n            });\n        });\n        setInterval(() => {\n            this.ticksDate();\n            this.isCompleted();\n        }, 1000);\n        if (this.section.type === 'pdf') {\n            const timerPdf = setInterval(() => {\n                if (this.completeFlag) {\n                    clearInterval(timerPdf);\n                }\n                this.lastActive = new Date();\n                this.prevHistory.lastactivedate = moment(this.lastActive);\n                this.prevHistory.stamp = this.pageNum;\n                this.sectionHistoryService.update(this.prevHistory);\n            }, 30000);\n        } else {\n            const timerMP4 = setInterval(() => {\n                // this.ticksSecond();\n                if (this.completeFlag) {\n                    clearInterval(timerMP4);\n                }\n                this.lastActive = new Date();\n                this.prevHistory.lastactivedate = moment(this.lastActive);\n                this.prevHistory.stamp = this.ellapsed;\n                this.sectionHistoryService.update(this.prevHistory);\n            }, 10000);\n        }\n        this.contentFile = this.section.content;\n        /**\n        const fileReader = new FileReader();\n        fileReader.onload = (e: Event) => {\n            this.arrayBuffer = fileReader.result;\n        };\n        fileReader.readAsArrayBuffer(this.section.content);\n        this.contentFile = new Uint8Array(this.arrayBuffer);\n        for (let i = 0; i < this.section.content.length; i++) {\n            this.contentFile[i] = this.section.content.charCodeAt(i);\n        }*/\n        this.pdflink = this.section.pdfUrl;\n        this.lastpageNum = this.section.totalPages;\n        this.quizName = this.section.quiz.name;\n        this.courseName = this.section.course.normCourses;\n    }\n\n    isCompleted() {\n        this.currentTime = this.api.currentTime;\n        this.isComplete = this.api.isCompleted;\n        if (this.isComplete || this.pageNum === this.lastpageNum) {\n            this.completeFlag = true;\n            this.completed = this.ellapsedTime;\n            if ((this.comingAgainFlag = false)) {\n                this.onPause();\n            }\n        }\n    }\n\n    onPause() {\n        this.pause = true;\n        this.api.pause();\n    }\n\n    referSlide(slide: number) {\n        this.pageNum = slide;\n    }\n\n    referVideo(time: string) {\n        const hrs = time.substring(0, 2);\n        const min = time.substring(3, 5);\n        const sec = time.substring(6, 8);\n        const hrsNum = Number(hrs);\n        const minNum = Number(min);\n        const secNum = Number(sec);\n        this.api.seekTime(hrsNum * 3600 + minNum * 60 + secNum);\n    }\n\n    onPlay() {\n        if (this.isComplete) {\n            this.comingAgainFlag = true;\n        }\n        this.prevEllapsed = this.ellapsed;\n        this.startDate = new Date();\n        this.pause = false;\n        this.api.play();\n    }\n\n    onStepBackward30() {\n        if (this.isComplete) {\n            this.comingAgainFlag = true;\n        }\n        if (this.ellapsed <= 30) {\n            this.onReset();\n        } else {\n            /**this.ellapsed = this.ellapsed - 30;*/\n            this.api.seekTime(this.ellapsed - 30, false);\n            this.onPlay();\n        }\n    }\n\n    onStepBackward60() {\n        if (this.isComplete) {\n            this.comingAgainFlag = true;\n        }\n        if (this.ellapsed <= 60) {\n            this.onReset();\n        } else {\n            /**this.ellapsed = this.ellapsed - 60;*/\n            this.api.seekTime(this.ellapsed - 60, false);\n            this.onPlay();\n        }\n    }\n\n    onStepBackward300() {\n        if (this.isComplete) {\n            this.comingAgainFlag = true;\n        }\n        if (this.ellapsed <= 300) {\n            this.onReset();\n        } else {\n            /**this.ellapsed = this.ellapsed - 300;*/\n            this.api.seekTime(this.ellapsed - 300, false);\n            this.onPlay();\n        }\n    }\n\n    onReset() {\n        if (this.isComplete) {\n            this.comingAgainFlag = true;\n        }\n        this.api.seekTime(0, false);\n        this.onPlay();\n    }\n\n    ticksDate() {\n        if (this.pause === false || this.section.type === 'pdf') {\n            this.nowDate = new Date();\n            this.ellapsed = (this.nowDate.getTime() - this.startDate.getTime()) / 1000 + this.prevEllapsed;\n            this.ellapsedTime = this.parseTime(this.ellapsed);\n            // return this.ellapsedTime;\n        }\n    }\n\n    ticksSecond() {\n        if (this.api.isCompleted) {\n            this.pause = true;\n        } else {\n            if (this.pause === false) {\n                this.ellapsed++;\n                this.ellapsedTime = this.parseTime(this.ellapsed);\n                /**this.ellapsed = this.api.currentTime;\n                 this.ellapsedTime = this.parseTime(this.ellapsed);*/\n            }\n        }\n    }\n\n    parseTime(totalSeconds: number) {\n        let hrs: string | number = Math.floor(totalSeconds / 3600);\n        if (Number(hrs) < 1) {\n            let mins: string | number = Math.floor(totalSeconds / 60);\n            let secs: string | number = Math.round(totalSeconds % 60);\n            mins = (mins < 10 ? '0' : '') + mins;\n            secs = (secs < 10 ? '0' : '') + secs;\n            hrs = (hrs < 10 ? '0' : '') + hrs;\n            return mins + ':' + secs;\n        } else {\n            let mins: string | number = Math.floor((totalSeconds % 3600) / 60);\n            let secs: string | number = Math.round(totalSeconds % 60);\n            mins = (mins < 10 ? '0' : '') + mins;\n            secs = (secs < 10 ? '0' : '') + secs;\n            hrs = (hrs < 10 ? '0' : '') + hrs;\n            return hrs + ':' + mins + ':' + secs;\n        }\n    }\n\n    gotoSlide(slide: number) {\n        this.pageNum = slide;\n    }\n\n    onPlayerReady(api: VgAPI) {\n        this.api = api;\n    }\n\n    nextPage() {\n        this.pageNum++;\n    }\n\n    prevPage() {\n        this.pageNum--;\n    }\n\n    moveToQuiz() {\n        this.prevHistory.watched = true;\n        this.prevHistory.lastactivedate = moment(new Date());\n        this.sectionHistoryService.update(this.prevHistory).subscribe(() => {\n            this.logs.timespent += this.ellapsed;\n            this.logs.course = this.reqdCourse;\n            this.logs.customer = this.customer;\n            this.logs.recorddate = moment();\n            this.timeCourseLogService.create(this.logs).subscribe(() => {\n                this.tempQuizApp.currSection = this.section;\n                this.tempQuizApp.newSection = this.section.quiz.newSection;\n                this.tempQuizApp.quiz = this.section.quiz;\n                this.tempQuizApp.questions = this.questionService.findbyquiz(this.section.quiz.id).flatMap[0];\n                this.quizAppService.create(this.tempQuizApp).subscribe(() => {\n                    this.router.navigateByUrl('quiz-app/' + this.tempQuizApp.id.toString() + '/view');\n                });\n            });\n        });\n    }\n}\n"]}]}