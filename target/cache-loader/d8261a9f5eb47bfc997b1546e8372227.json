{"remainingRequest":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/thread-loader/dist/cjs.js??ref--10-2!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/ts-loader/index.js??ref--10-3!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/angular-router-loader/src/index.js!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/tslint-loader/index.js!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/src/main/webapp/app/entities/dashboards/dashboards.route.ts","dependencies":[{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/src/main/webapp/app/entities/dashboards/dashboards.route.ts","mtime":1546132670000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/cache-loader/dist/cjs.js","mtime":1546694544000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/thread-loader/dist/cjs.js","mtime":1546694542000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/ts-loader/index.js","mtime":1519365772000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar core_2 = require(\"app/core\");\nvar rxjs_1 = require(\"rxjs\");\nvar operators_1 = require(\"rxjs/operators\");\nvar dashboards_model_1 = require(\"app/shared/model/dashboards.model\");\nvar dashboards_service_1 = require(\"./dashboards.service\");\nvar dashboards_component_1 = require(\"./dashboards.component\");\nvar DashboardsResolve = /** @class */ (function () {\n    function DashboardsResolve(service) {\n        this.service = service;\n    }\n    DashboardsResolve.prototype.resolve = function (route, state) {\n        var id = route.params['id'] ? route.params['id'] : null;\n        if (id) {\n            return this.service.find(id).pipe(operators_1.map(function (dashboards) { return dashboards.body; }));\n        }\n        return rxjs_1.of(new dashboards_model_1.Dashboards());\n    };\n    DashboardsResolve = tslib_1.__decorate([\n        core_1.Injectable({ providedIn: 'root' }),\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof dashboards_service_1.DashboardsService !== \"undefined\" && dashboards_service_1.DashboardsService) === \"function\" && _a || Object])\n    ], DashboardsResolve);\n    return DashboardsResolve;\n    var _a;\n}());\nexports.DashboardsResolve = DashboardsResolve;\nexports.dashboardsRoute = [\n    {\n        path: 'dashboards',\n        component: dashboards_component_1.DashboardsComponent,\n        data: {\n            authorities: ['ROLE_USER'],\n            pageTitle: 'smartCpdApp.dashboards.home.title'\n        },\n        canActivate: [core_2.UserRouteAccessService]\n    }\n];\n",{"version":3,"file":"/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/src/main/webapp/app/entities/dashboards/dashboards.route.ts","sourceRoot":"","sources":["/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/angular-router-loader/src/index.js!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/node_modules/tslint-loader/index.js!/Users/shaanjotgill/Documents/smart-cpd-application-v2-3a6205c518b9c2bb4f1774f714eb0702c2136e95/src/main/webapp/app/entities/dashboards/dashboards.route.ts"],"names":[],"mappings":";;;AAAA,sCAA2C;AAG3C,iCAAkD;AAClD,6BAA0B;AAC1B,4CAAqC;AACrC,sEAA+D;AAC/D,2DAAyD;AACzD,+DAA6D;AAI7D;IACI,2BAAoB,OAA0B;QAA1B,YAAO,GAAP,OAAO,CAAmB;IAAG,CAAC;IAElD,mCAAO,GAAP,UAAQ,KAA6B,EAAE,KAA0B;QAC7D,IAAM,EAAE,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAC1D,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACL,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,eAAG,CAAC,UAAC,UAAoC,IAAK,OAAA,UAAU,CAAC,IAAI,EAAf,CAAe,CAAC,CAAC,CAAC;QACtG,CAAC;QACD,MAAM,CAAC,SAAE,CAAC,IAAI,6BAAU,EAAE,CAAC,CAAC;IAChC,CAAC;IATQ,iBAAiB;QAD7B,iBAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;qEAEF,sCAAiB,oBAAjB,sCAAiB;OADrC,iBAAiB,CAU7B;IAAD,wBAAC;;CAAA,AAVD,IAUC;AAVY,8CAAiB;AAYjB,QAAA,eAAe,GAAW;IACnC;QACI,IAAI,EAAE,YAAY;QAClB,SAAS,EAAE,0CAAmB;QAC9B,IAAI,EAAE;YACF,WAAW,EAAE,CAAC,WAAW,CAAC;YAC1B,SAAS,EAAE,mCAAmC;SACjD;QACD,WAAW,EAAE,CAAC,6BAAsB,CAAC;KACxC;CACJ,CAAC","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, Routes } from '@angular/router';\nimport { UserRouteAccessService } from 'app/core';\nimport { of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Dashboards } from 'app/shared/model/dashboards.model';\nimport { DashboardsService } from './dashboards.service';\nimport { DashboardsComponent } from './dashboards.component';\nimport { IDashboards } from 'app/shared/model/dashboards.model';\n\n@Injectable({ providedIn: 'root' })\nexport class DashboardsResolve implements Resolve<IDashboards> {\n    constructor(private service: DashboardsService) {}\n\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        const id = route.params['id'] ? route.params['id'] : null;\n        if (id) {\n            return this.service.find(id).pipe(map((dashboards: HttpResponse<Dashboards>) => dashboards.body));\n        }\n        return of(new Dashboards());\n    }\n}\n\nexport const dashboardsRoute: Routes = [\n    {\n        path: 'dashboards',\n        component: DashboardsComponent,\n        data: {\n            authorities: ['ROLE_USER'],\n            pageTitle: 'smartCpdApp.dashboards.home.title'\n        },\n        canActivate: [UserRouteAccessService]\n    }\n];\n"]}]}